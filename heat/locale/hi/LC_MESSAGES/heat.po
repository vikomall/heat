# Hindi translations for heat.
# Copyright (C) 2013 ORGANIZATION
# This file is distributed under the same license as the heat project.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version:  Heat\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2013-12-30 06:05+0000\n"
"PO-Revision-Date: 2013-10-10 01:09+0000\n"
"Last-Translator: openstackjenkins <jenkins@openstack.org>\n"
"Language-Team: Hindi "
"(http://www.transifex.com/projects/p/openstack/language/hi/)\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 1.3\n"

#: heat/api/aws/ec2token.py:41
msgid "Authentication Endpoint URI"
msgstr ""

#: heat/api/aws/ec2token.py:44 heat/common/config.py:126
msgid "Allow orchestration of multiple clouds"
msgstr ""

#: heat/api/aws/ec2token.py:47 heat/common/config.py:129
msgid ""
"Allowed keystone endpoints for auth_uri when multi_cloud is enabled. At "
"least one endpoint needs to be specified."
msgstr ""

#: heat/api/aws/ec2token.py:132
#, python-format
msgid "Attempt authorize on %s"
msgstr ""

#: heat/api/aws/ec2token.py:135
#, python-format
msgid "Authorize failed: %s"
msgstr ""

#: heat/api/aws/ec2token.py:145
msgid "Checking AWS credentials.."
msgstr ""

#: heat/api/aws/ec2token.py:152
msgid "No AWS Signature found."
msgstr ""

#: heat/api/aws/ec2token.py:160
msgid "No AWSAccessKeyId/Authorization Credential"
msgstr ""

#: heat/api/aws/ec2token.py:163
msgid "AWS credentials found, checking against keystone."
msgstr ""

#: heat/api/aws/ec2token.py:166
msgid "Ec2Token authorization failed, no auth_uri specified in config file"
msgstr ""

#: heat/api/aws/ec2token.py:168
msgid "Service misconfigured"
msgstr ""

#: heat/api/aws/ec2token.py:191
#, python-format
msgid "Authenticating with %s"
msgstr ""

#: heat/api/aws/ec2token.py:199
msgid "AWS authentication successful."
msgstr ""

#: heat/api/aws/ec2token.py:201
msgid "AWS authentication failure."
msgstr ""

#: heat/api/aws/exception.py:35
msgid "Generic HeatAPIException, please use specific subclasses!"
msgstr ""

#: heat/api/aws/exception.py:74
msgid "The request signature does not conform to AWS standards"
msgstr ""

#: heat/api/aws/exception.py:83
msgid "The request processing has failed due to an internal error"
msgstr ""

#: heat/api/aws/exception.py:94
msgid "The action or operation requested is invalid"
msgstr ""

#: heat/api/aws/exception.py:103
msgid "The certificate or AWS Key ID provided does not exist"
msgstr ""

#: heat/api/aws/exception.py:112
msgid "Incompatible parameters were used together"
msgstr ""

#: heat/api/aws/exception.py:121
msgid "A bad or out-of-range value was supplied"
msgstr ""

#: heat/api/aws/exception.py:130
msgid "AWS query string is malformed, does not adhere to AWS spec"
msgstr ""

#: heat/api/aws/exception.py:140
msgid "The query string is malformed"
msgstr ""

#: heat/api/aws/exception.py:149
msgid "The request is missing an action or operation parameter"
msgstr ""

#: heat/api/aws/exception.py:159
msgid "Does not contain a valid AWS Access Key or certificate"
msgstr ""

#: heat/api/aws/exception.py:168
msgid "A mandatory input parameter is missing"
msgstr ""

#: heat/api/aws/exception.py:177
msgid "The AWS Access Key ID needs a subscription for the service"
msgstr ""

#: heat/api/aws/exception.py:188
msgid "Request expired or more than 15mins in the future"
msgstr ""

#: heat/api/aws/exception.py:197
msgid "Service temporarily unvavailable"
msgstr ""

#: heat/api/aws/exception.py:207
msgid "Request was denied due to request throttling"
msgstr ""

#: heat/api/aws/exception.py:216
msgid "Resource with the name requested already exists"
msgstr ""

#: heat/api/aws/exception.py:227
msgid "User is not authorized to perform action"
msgstr ""

#: heat/api/aws/exception.py:237
msgid ""
"The request signature we calculated does not match the signature you "
"provided"
msgstr ""

#: heat/api/aws/exception.py:248
msgid "The requested action is not yet implemented"
msgstr ""

#: heat/api/aws/utils.py:107
#, python-format
msgid "Request does not contain %s parameter!"
msgstr ""

#: heat/api/cfn/v1/stacks.py:57 heat/api/cloudwatch/watch.py:51
#, python-format
msgid "Action %s not allowed for user"
msgstr ""

#: heat/api/cfn/v1/stacks.py:64 heat/api/cloudwatch/watch.py:58
#, python-format
msgid "Error authorizing action %s"
msgstr ""

#: heat/api/cfn/v1/stacks.py:258
#, python-format
msgid "Failed to fetch template: %s"
msgstr ""

#: heat/api/cfn/v1/stacks.py:293
msgid "DisableRollback and OnFailure may not be used together"
msgstr ""

#: heat/api/cfn/v1/stacks.py:313
#, python-format
msgid "Unexpected action %(action)s"
msgstr ""

#: heat/api/cfn/v1/stacks.py:331 heat/api/cfn/v1/stacks.py:413
msgid "Invalid Template URL"
msgstr ""

#: heat/api/cfn/v1/stacks.py:335 heat/api/cfn/v1/stacks.py:416
msgid "TemplateBody or TemplateUrl were not given."
msgstr ""

#: heat/api/cfn/v1/stacks.py:341 heat/api/cfn/v1/stacks.py:422
msgid "The Template must be a JSON or YAML document."
msgstr ""

#: heat/api/cfn/v1/stacks.py:383
msgid "stack not not found"
msgstr ""

#: heat/api/cloudwatch/watch.py:217
#, python-format
msgid "Invalid filter key %s, ignoring"
msgstr ""

#: heat/api/cloudwatch/watch.py:226
#, python-format
msgid "filter parameters : %s"
msgstr ""

#: heat/api/cloudwatch/watch.py:272
msgid "Request does not contain required MetricData"
msgstr ""

#: heat/api/cloudwatch/watch.py:323
#, python-format
msgid "Invalid state %(state)s, expecting one of %(expect)s"
msgstr ""

#: heat/api/cloudwatch/watch.py:339
#, python-format
msgid "setting %(name)s to %(state)s"
msgstr ""

#: heat/api/middleware/version_negotiation.py:50
#, python-format
msgid "Processing request: %(method)s %(path)s Accept: %(accept)s"
msgstr ""

#: heat/api/middleware/version_negotiation.py:65
#, python-format
msgid "Matched versioned URI. Version: %(major_version)d.%(minor_version)d"
msgstr ""

#: heat/api/middleware/version_negotiation.py:73
#, python-format
msgid ""
"Unknown version in versioned URI: %(major_version)d.%(minor_version)d. "
"Returning version choices."
msgstr ""

#: heat/api/middleware/version_negotiation.py:89
#, python-format
msgid "Matched versioned media type. Version: %(major_version)d.%(minor_version)d"
msgstr ""

#: heat/api/middleware/version_negotiation.py:95
#, python-format
msgid ""
"Unknown version in accept header: "
"%(major_version)d.%(minor_version)d...returning version choices."
msgstr ""

#: heat/api/middleware/version_negotiation.py:103
#, python-format
msgid "Unknown accept header: %s...returning HTTP not found."
msgstr ""

#: heat/api/openstack/v1/actions.py:43
msgid "No action specified"
msgstr ""

#: heat/api/openstack/v1/actions.py:46
msgid "Multiple actions specified"
msgstr ""

#: heat/api/openstack/v1/actions.py:50
#, python-format
msgid "Invalid action %s specified"
msgstr ""

#: heat/api/openstack/v1/actions.py:57
#, python-format
msgid "Unexpected action %s"
msgstr ""

#: heat/api/openstack/v1/events.py:103
#, python-format
msgid "No events found for resource %s"
msgstr ""

#: heat/api/openstack/v1/events.py:121
#, python-format
msgid "No event %s found"
msgstr ""

#: heat/api/openstack/v1/stacks.py:76
#, python-format
msgid "%(type)s not in valid format: %(error)s"
msgstr ""

#: heat/api/openstack/v1/stacks.py:84
msgid "No stack name specified"
msgstr ""

#: heat/api/openstack/v1/stacks.py:102
#, python-format
msgid "Could not retrieve template: %s"
msgstr ""

#: heat/api/openstack/v1/stacks.py:105
msgid "No template specified"
msgstr ""

#: heat/api/openstack/v1/util.py:57
msgid "Invalid Stack address"
msgstr ""

#: heat/cmd/manage.py:66
msgid "How long to preserve deleted data."
msgstr ""

#: heat/cmd/manage.py:70
msgid "Granularity to use for age argument, defaults to days."
msgstr ""

#: heat/common/auth_password.py:116
msgid "Request missing required header X-Auth-Url"
msgstr ""

#: heat/common/auth_password.py:121
#, python-format
msgid "Header X-Auth-Url \"%s\" not an allowed endpoint"
msgstr ""

#: heat/common/config.py:37
msgid "The flavor to use"
msgstr ""

#: heat/common/config.py:39
msgid "The API paste config file to use"
msgstr ""

#: heat/common/config.py:87
msgid "Select deferred auth method, stored password or trusts"
msgstr ""

#: heat/common/config.py:91
msgid "Subset of trustor roles to be delegated to heat"
msgstr ""

#: heat/common/config.py:97
msgid "Maximum number of stacks any one tenant may have active at one time."
msgstr ""

#: heat/common/config.py:101
msgid ""
"Controls how many events will be pruned whenever a  stack's events exceed"
" max_events_per_stack. Set this lower to keep more events at the expense "
"of more frequent purges."
msgstr ""

#: heat/common/config.py:107
msgid ""
"Maximum events that will be available per stack. Older events will be "
"deleted when this is reached. Set to 0 for unlimited events per stack."
msgstr ""

#: heat/common/config.py:112
msgid "RPC timeout for the engine liveness check that is used for stack locking."
msgstr ""

#: heat/common/config.py:134
msgid "Optional CA cert file to use in SSL connections"
msgstr ""

#: heat/common/config.py:136
msgid "Optional PEM-formatted certificate chain file"
msgstr ""

#: heat/common/config.py:138
msgid "Optional PEM-formatted file that contains the private key"
msgstr ""

#: heat/common/config.py:142
msgid "If set then the server's certificate will not be verified"
msgstr ""

#: heat/common/config.py:162
msgid ""
"Heat build revision. If you would prefer to manage your build revision "
"separately you can move this section to a different file and add it as "
"another config option"
msgstr ""

#: heat/common/config.py:234
msgid "Unable to locate config file"
msgstr ""

#: heat/common/config.py:246
#, python-format
msgid ""
"Unable to load %(app_name)s from configuration file %(conf_file)s.\n"
"Got: %(e)r"
msgstr ""

#: heat/common/custom_backend_auth.py:45
msgid "Authenticating user token"
msgstr ""

#: heat/common/custom_backend_auth.py:62
msgid "Backend authentication failed"
msgstr ""

#: heat/common/environment_format.py:40
#, python-format
msgid "environment has wrong section \"%s\""
msgstr ""

#: heat/common/exception.py:102
msgid "An unknown exception occurred."
msgstr ""

#: heat/common/exception.py:113 heat/openstack/common/rpc/common.py:88
msgid "Exception in string format operation"
msgstr ""

#: heat/common/exception.py:128
#, python-format
msgid "Missing required credential: %(required)s"
msgstr ""

#: heat/common/exception.py:132
#, python-format
msgid ""
"Incorrect auth strategy, expected \"%(expected)s\" but received "
"\"%(received)s\""
msgstr ""

#: heat/common/exception.py:137
#, python-format
msgid "Connect error/bad request to Auth service at URL %(url)s."
msgstr ""

#: heat/common/exception.py:141
#, python-format
msgid "Auth service at URL %(url)s not found."
msgstr ""

#: heat/common/exception.py:145
msgid "Authorization failed."
msgstr ""

#: heat/common/exception.py:149
msgid "You are not authenticated."
msgstr ""

#: heat/common/exception.py:153 heat/common/exception.py:158
msgid "You are not authorized to complete this action."
msgstr ""

#: heat/common/exception.py:162
#, python-format
msgid "Data supplied was not valid: %(reason)s"
msgstr ""

#: heat/common/exception.py:166
#, python-format
msgid "Redirecting to %(uri)s for authorization."
msgstr ""

#: heat/common/exception.py:170
msgid "The URI was too long."
msgstr ""

#: heat/common/exception.py:174
#, python-format
msgid "Maximum redirects (%(redirects)s) was exceeded."
msgstr ""

#: heat/common/exception.py:178
msgid "Received invalid HTTP redirect."
msgstr ""

#: heat/common/exception.py:182
#, python-format
msgid ""
"Multiple 'image' service matches for region %(region)s. This generally "
"means that a region is required and you have not supplied one."
msgstr ""

#: heat/common/exception.py:188
#, python-format
msgid "The Parameter (%(key)s) was not provided."
msgstr ""

#: heat/common/exception.py:192
#, python-format
msgid "The Parameter (%(key)s) was not defined in template."
msgstr ""

#: heat/common/exception.py:196
#, python-format
msgid "The Parameter (%(key)s) has no attributes."
msgstr ""

#: heat/common/exception.py:200
#, python-format
msgid "The Referenced Attribute (%(resource)s %(key)s) is incorrect."
msgstr ""

#: heat/common/exception.py:205
#, python-format
msgid "The specified reference \"%(resource)s\" (in %(key)s) is incorrect."
msgstr ""

#: heat/common/exception.py:210
#, python-format
msgid "The Key (%(key_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:214
#, python-format
msgid "The Flavor ID (%(flavor_id)s) could not be found."
msgstr ""

#: heat/common/exception.py:218
#, python-format
msgid "The Image (%(image_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:222
#, python-format
msgid "Multiple physical resources were found with name (%(name)s)."
msgstr ""

#: heat/common/exception.py:227
#, python-format
msgid "Searching Tenant %(target)s from Tenant %(actual)s forbidden."
msgstr ""

#: heat/common/exception.py:232
#, python-format
msgid "The Stack (%(stack_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:236
#, python-format
msgid "The Stack (%(stack_name)s) already exists."
msgstr ""

#: heat/common/exception.py:240
#, python-format
msgid "%(message)s"
msgstr ""

#: heat/common/exception.py:244
#, python-format
msgid ""
"The Resource (%(resource_name)s) could not be found in Stack "
"%(stack_name)s."
msgstr ""

#: heat/common/exception.py:249
#, python-format
msgid "The Resource Type (%(type_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:253
#, python-format
msgid "The Resource (%(resource_name)s) is not available."
msgstr ""

#: heat/common/exception.py:257
#, python-format
msgid "The Resource (%(resource_id)s) could not be found."
msgstr ""

#: heat/common/exception.py:261
#, python-format
msgid "The Watch Rule (%(watch_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:265
#, python-format
msgid "%(exc_type)s: %(message)s"
msgstr ""

#: heat/common/exception.py:279
#, python-format
msgid "%(feature)s is not supported."
msgstr ""

#: heat/common/exception.py:283
#, python-format
msgid "Cannot define the following properties at the same time: %s."
msgstr ""

#: heat/common/exception.py:301
msgid ""
"Egress rules are only allowed when Neutron is used and the 'VpcId' "
"property is set."
msgstr ""

#: heat/common/exception.py:319
#, python-format
msgid "Request limit exceeded: %(message)s"
msgstr ""

#: heat/common/exception.py:323
msgid "Maximum resources per stack exceeded."
msgstr ""

#: heat/common/exception.py:327
#, python-format
msgid "Stack %(stack_name)s already has an action (%(action)s) in progress."
msgstr ""

#: heat/common/heat_keystoneclient.py:101
msgid "Keystone v2 API connection failed, no password or auth_token!"
msgstr ""

#: heat/common/heat_keystoneclient.py:116
msgid "v2 trust token re-scoping failed!"
msgstr ""

#: heat/common/heat_keystoneclient.py:171
msgid "Keystone v3 API connection failed, no password or auth_token!"
msgstr ""

#: heat/common/heat_keystoneclient.py:242
#, python-format
msgid "Truncating the username %s to the last 64 characters."
msgstr ""

#: heat/common/heat_keystoneclient.py:262
#, python-format
msgid "Adding user %(user)s to role %(role)s"
msgstr ""

#: heat/common/heat_keystoneclient.py:267
#, python-format
msgid "Failed to add user %(user)s to role %(role)s, check role exists!"
msgstr ""

#: heat/common/heat_keystoneclient.py:293
#, python-format
msgid "Problem deleting user %(user)s: %(reason)s"
msgstr ""

#: heat/common/heat_keystoneclient.py:323
#, python-format
msgid "Unexpected number of ec2 credentials %(len)s for %(user)s"
msgstr ""

#: heat/common/identifier.py:41
msgid "Stack name may not contain \"/\""
msgstr ""

#: heat/common/identifier.py:57
#, python-format
msgid "\"%s\" is not a valid ARN"
msgstr ""

#: heat/common/identifier.py:63
#, python-format
msgid "\"%s\" is not a valid Heat ARN"
msgstr ""

#: heat/common/identifier.py:80
#, python-format
msgid "\"%s\" is not a valid URL"
msgstr ""

#: heat/common/identifier.py:86
#, python-format
msgid "\"%s\" is not a valid ARN URL"
msgstr ""

#: heat/common/identifier.py:134 heat/common/identifier.py:141
#, python-format
msgid "Unknown attribute \"%s\""
msgstr ""

#: heat/common/identifier.py:172 heat/engine/resource.py:168
msgid "Resource name may not contain \"/\""
msgstr ""

#: heat/common/plugin_loader.py:94
#, python-format
msgid "Failed to import module %s"
msgstr ""

#: heat/common/short_id.py:43
#, python-format
msgid "Invalid UUID version (%d)"
msgstr ""

#: heat/common/template_format.py:62
msgid "Template exceeds maximum allowed size."
msgstr ""

#: heat/common/timeutils.py:34
msgid "Only ISO 8601 duration format of the form PT#H#M#S is supported."
msgstr ""

#: heat/common/urlfetch.py:43
#, python-format
msgid "Fetching data from %s"
msgstr ""

#: heat/common/urlfetch.py:48
#, python-format
msgid "Invalid URL scheme %s"
msgstr ""

#: heat/common/urlfetch.py:54 heat/common/urlfetch.py:78
#, python-format
msgid "Failed to retrieve template: %s"
msgstr ""

#: heat/common/wsgi.py:55 heat/common/wsgi.py:84 heat/common/wsgi.py:113
msgid ""
"Address to bind the server.  Useful when selecting a particular network "
"interface."
msgstr ""

#: heat/common/wsgi.py:59 heat/common/wsgi.py:88 heat/common/wsgi.py:117
msgid "The port on which the server will listen."
msgstr ""

#: heat/common/wsgi.py:62 heat/common/wsgi.py:91 heat/common/wsgi.py:120
msgid "Number of backlog requests to configure the socket with"
msgstr ""

#: heat/common/wsgi.py:66 heat/common/wsgi.py:95 heat/common/wsgi.py:124
msgid "Location of the SSL Certificate File to use for SSL mode"
msgstr ""

#: heat/common/wsgi.py:70 heat/common/wsgi.py:99 heat/common/wsgi.py:128
msgid "Location of the SSL Key File to use for enabling SSL mode"
msgstr ""

#: heat/common/wsgi.py:74 heat/common/wsgi.py:103 heat/common/wsgi.py:132
msgid "Number of workers for Heat service"
msgstr ""

#: heat/common/wsgi.py:190 heat/openstack/common/sslutils.py:59
msgid ""
"When running server in SSL mode, you must specify both a cert_file and "
"key_file option value in your configuration file"
msgstr ""

#: heat/common/wsgi.py:208
#, python-format
msgid "Could not bind to %(bind_addr)safter trying for 30 seconds"
msgstr ""

#: heat/common/wsgi.py:240
msgid "SIGTERM received"
msgstr ""

#: heat/common/wsgi.py:249
msgid "SIGHUP received"
msgstr ""

#: heat/common/wsgi.py:264 heat/openstack/common/service.py:299
#, python-format
msgid "Starting %d workers"
msgstr ""

#: heat/common/wsgi.py:275
#, python-format
msgid "Removing dead child %s"
msgstr ""

#: heat/common/wsgi.py:282
msgid "Caught keyboard interrupt. Exiting."
msgstr ""

#: heat/common/wsgi.py:286
msgid "Exited"
msgstr ""

#: heat/common/wsgi.py:304
#, python-format
msgid "Child %d exiting normally"
msgstr ""

#: heat/common/wsgi.py:307
#, python-format
msgid "Started child %s"
msgstr ""

#: heat/common/wsgi.py:330
msgid "Starting single process server"
msgstr ""

#: heat/common/wsgi.py:537
#, python-format
msgid ""
"JSON body size (%(len)s bytes) exceeds maximum allowed size (%(limit)s "
"bytes)."
msgstr ""

#: heat/common/wsgi.py:663
#, python-format
msgid "Exception handling resource: %s"
msgstr ""

#: heat/common/wsgi.py:664
msgid ""
"The server could not comply with the request since\r\n"
"it is either malformed or otherwise incorrect.\r\n"
msgstr ""

#: heat/common/wsgi.py:680
#, python-format
msgid "Returning %(code)s to user: %(explanation)s"
msgstr ""

#: heat/common/wsgi.py:720
msgid "Unable to serialize exception response"
msgstr ""

#: heat/common/wsgi.py:755
#, python-format
msgid "Unexpected error occurred serving API: %s"
msgstr ""

#: heat/db/sqlalchemy/api.py:78
#, python-format
msgid "raw template with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:95
#, python-format
msgid "resource with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:125
msgid "no resources were found"
msgstr ""

#: heat/db/sqlalchemy/api.py:139
msgid "no resource data found"
msgstr ""

#: heat/db/sqlalchemy/api.py:189
msgid "No resource data found"
msgstr ""

#: heat/db/sqlalchemy/api.py:242
#, python-format
msgid "no resources for stack_id %s were found"
msgstr ""

#: heat/db/sqlalchemy/api.py:373
#, python-format
msgid "Attempt to update a stack with id: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:387
#, python-format
msgid "Attempt to delete a stack with id: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:572
#, python-format
msgid "Attempt to update a watch with id: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:584
#, python-format
msgid "Attempt to delete watch_rule: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:613
msgid "age should be an integer"
msgstr ""

#: heat/db/sqlalchemy/api.py:615
msgid "age should be a positive integer"
msgstr ""

#: heat/db/sqlalchemy/api.py:619
msgid "granularity should be days, hours, minutes, or seconds"
msgstr ""

#: heat/db/sqlalchemy/migration.py:42
#: heat/openstack/common/db/sqlalchemy/migration.py:220
msgid "version should be an integer"
msgstr ""

#: heat/db/sqlalchemy/migrate_repo/versions/029_event_id_to_uuid.py:41
msgid ""
"If you really want to downgrade to this version, you should drop all the "
"records."
msgstr ""

#: heat/engine/api.py:35
msgid "create timeout conversion"
msgstr ""

#: heat/engine/api.py:47
#, python-format
msgid "Unexpected value for parameter %(name)s : %(value)s"
msgstr ""

#: heat/engine/api.py:209
msgid "Unexpected number of keys in watch_data.data!"
msgstr ""

#: heat/engine/attributes.py:85
#, python-format
msgid "%(resource)s: Invalid attribute %(key)s"
msgstr ""

#: heat/engine/clients.py:34
msgid "swiftclient not available"
msgstr ""

#: heat/engine/clients.py:39
msgid "neutronclient not available"
msgstr ""

#: heat/engine/clients.py:44
msgid "cinderclient not available"
msgstr ""

#: heat/engine/clients.py:50
msgid "troveclient not available"
msgstr ""

#: heat/engine/clients.py:56
msgid "ceilometerclient not available"
msgstr ""

#: heat/engine/clients.py:105
msgid "Nova connection failed, no auth_token!"
msgstr ""

#: heat/engine/clients.py:139
msgid "Swift connection failed, no auth_token!"
msgstr ""

#: heat/engine/clients.py:164
msgid "Neutron connection failed, no auth_token!"
msgstr ""

#: heat/engine/clients.py:188
msgid "Cinder connection failed, no auth_token!"
msgstr ""

#: heat/engine/clients.py:216
msgid "Trove connection failed, no auth_token!"
msgstr ""

#: heat/engine/clients.py:241
msgid "Ceilometer connection failed, no auth_token!"
msgstr ""

#: heat/engine/clients.py:277
msgid "Heat connection failed, no auth_token!"
msgstr ""

#: heat/engine/constraints.py:74
#, python-format
msgid "Invalid type (%s)"
msgstr ""

#: heat/engine/constraints.py:81
#, python-format
msgid "Single schema valid only for %(ltype)s, not %(utype)s"
msgstr ""

#: heat/engine/constraints.py:91
#, python-format
msgid "Schema valid only for %(ltype)s or %(mtype)s, not %(utype)s"
msgstr ""

#: heat/engine/constraints.py:100
#, python-format
msgid "%(name)s constraint invalid for %(utype)s"
msgstr ""

#: heat/engine/constraints.py:111
#, python-format
msgid "Invalid default %(default)s (%(exc)s)"
msgstr ""

#: heat/engine/constraints.py:179
#, python-format
msgid "Invalid key %s"
msgstr ""

#: heat/engine/constraints.py:268
msgid "min/max must be numeric"
msgstr ""

#: heat/engine/constraints.py:271
msgid "range must have min and/or max"
msgstr ""

#: heat/engine/constraints.py:275
#, python-format
msgid "The value must be at least %(min)s."
msgstr ""

#: heat/engine/constraints.py:277
#, python-format
msgid "The value must be no greater than %(max)s."
msgstr ""

#: heat/engine/constraints.py:279
#, python-format
msgid "The value must be in the range %(min)s to %(max)s."
msgstr ""

#: heat/engine/constraints.py:329
msgid "min/max length must be integral"
msgstr ""

#: heat/engine/constraints.py:334
#, python-format
msgid "The length must be at least %(min)s."
msgstr ""

#: heat/engine/constraints.py:336
#, python-format
msgid "The length must be no greater than %(max)s."
msgstr ""

#: heat/engine/constraints.py:338
#, python-format
msgid "The length must be in the range %(min)s to %(max)s."
msgstr ""

#: heat/engine/constraints.py:369
msgid "AllowedValues must be a list"
msgstr ""

#: heat/engine/constraints.py:374
#, python-format
msgid "Allowed values: %s"
msgstr ""

#: heat/engine/constraints.py:407
#, python-format
msgid "Value must match pattern: %s"
msgstr ""

#: heat/engine/dependencies.py:25
#, python-format
msgid "Circular Dependency Found: %(cycle)s"
msgstr ""

#: heat/engine/environment.py:187 heat/engine/environment.py:193
#, python-format
msgid "Removing %(item)s from %(path)s"
msgstr ""

#: heat/engine/environment.py:206
#, python-format
msgid "Changing %(path)s from %(was)s to %(now)s"
msgstr ""

#: heat/engine/environment.py:208
#, python-format
msgid "Registering %(path)s -> %(value)s"
msgstr ""

#: heat/engine/environment.py:279 heat/tests/test_resource.py:77
#, python-format
msgid "Resource \"%s\" has no type"
msgstr ""

#: heat/engine/environment.py:282 heat/tests/test_resource.py:85
#, python-format
msgid "Non-empty resource type is required for resource \"%s\""
msgstr ""

#: heat/engine/environment.py:289
#, python-format
msgid "Unknown resource Type : %s"
msgstr ""

#: heat/engine/event.py:59
#, python-format
msgid "No event exists with id \"%s\""
msgstr ""

#: heat/engine/event.py:87
msgid "Duplicating event"
msgstr ""

#: heat/engine/hot.py:57 heat/engine/template.py:71
#, python-format
msgid "\"%s\" is not a valid template section"
msgstr ""

#: heat/engine/hot.py:228
msgid "Arguments to \"str_replace\" must be adictionary or a list"
msgstr ""

#: heat/engine/hot.py:245
#, python-format
msgid "\"str_replace\" syntax should be %s"
msgstr ""

#: heat/engine/hot.py:248
msgid "\"template\" parameter must be a string"
msgstr ""

#: heat/engine/hot.py:251
msgid "\"params\" parameter must be a dictionary"
msgstr ""

#: heat/engine/parameters.py:154
#, python-format
msgid "Invalid Parameter type \"%s\""
msgstr ""

#: heat/engine/parameters.py:183
#, python-format
msgid "Missing parameter %s"
msgstr ""

#: heat/engine/parameters.py:254
#, python-format
msgid "Value must be a comma-delimited list string: %s"
msgstr ""

#: heat/engine/parameters.py:290
#, python-format
msgid "Value must be valid JSON: %s"
msgstr ""

#: heat/engine/parser.py:81
#, python-format
msgid ""
"Invalid stack name %s must contain only alphanumeric or \"_-.\" "
"characters, must start with alpha"
msgstr ""

#: heat/engine/parser.py:167
msgid "Unable to set parameters StackId identifier"
msgstr ""

#: heat/engine/parser.py:188
#, python-format
msgid "No stack exists with id \"%s\""
msgstr ""

#: heat/engine/parser.py:311 heat/engine/parser.py:312
#, python-format
msgid "Duplicate names %s"
msgstr ""

#: heat/engine/parser.py:339 heat/engine/resource.py:760
#, python-format
msgid "Invalid action %s"
msgstr ""

#: heat/engine/parser.py:342 heat/engine/resource.py:763
#, python-format
msgid "Invalid status %s"
msgstr ""

#: heat/engine/parser.py:434
msgid "Loaded existing backup stack"
msgstr ""

#: heat/engine/parser.py:442
msgid "Created new backup stack"
msgstr ""

#: heat/engine/parser.py:465
#, python-format
msgid "Unexpected action %s passed to update!"
msgstr ""

#: heat/engine/parser.py:473
#, python-format
msgid "Starting update rollback for %s"
msgstr ""

#: heat/engine/parser.py:522
msgid "Deleting backup stack"
msgstr ""

#: heat/engine/parser.py:545
#, python-format
msgid "Unexpected action %s passed to delete!"
msgstr ""

#: heat/engine/parser.py:644
#, python-format
msgid "delete: %s"
msgstr ""

#: heat/engine/parser.py:652
msgid "create"
msgstr ""

#: heat/engine/properties.py:73
#, python-format
msgid "Unknown key(s) %s"
msgstr ""

#: heat/engine/properties.py:94
#, python-format
msgid "No %s specified"
msgstr ""

#: heat/engine/properties.py:103
#, python-format
msgid "%(schema)s supplied for  for %(type)s %(data)s"
msgstr ""

#: heat/engine/properties.py:240
msgid "value is not an integer"
msgstr ""

#: heat/engine/properties.py:252
msgid "Value must be a string"
msgstr ""

#: heat/engine/properties.py:270
#, python-format
msgid "\"%s\" is not a map"
msgstr ""

#: heat/engine/properties.py:279
#, python-format
msgid "\"%s\" is not a list"
msgstr ""

#: heat/engine/properties.py:291
#, python-format
msgid "\"%s\" is not a valid boolean"
msgstr ""

#: heat/engine/properties.py:347
#, python-format
msgid "Property error : %s"
msgstr ""

#: heat/engine/properties.py:352
#, python-format
msgid "Property %s not implemented yet"
msgstr ""

#: heat/engine/properties.py:357
#, python-format
msgid "Unknown Property %s"
msgstr ""

#: heat/engine/properties.py:362
#, python-format
msgid "Invalid Property %s"
msgstr ""

#: heat/engine/properties.py:378
#, python-format
msgid "Property %s not assigned"
msgstr ""

#: heat/engine/resource.py:58 heat/engine/resource.py:61
#, python-format
msgid "The Resource %s requires replacement."
msgstr ""

#: heat/engine/resource.py:105
#, python-format
msgid "Specified status is invalid, defaulting to %s"
msgstr ""

#: heat/engine/resource.py:427
msgid "Error marking resource as failed"
msgstr ""

#: heat/engine/resource.py:438
#, python-format
msgid "State %s invalid for create"
msgstr ""

#: heat/engine/resource.py:484
msgid "Resource update already requested"
msgstr ""

#: heat/engine/resource.py:506
#, python-format
msgid "Resource %s update requires replacement"
msgstr ""

#: heat/engine/resource.py:526
#, python-format
msgid "State %s invalid for suspend"
msgstr ""

#: heat/engine/resource.py:530
#, python-format
msgid "suspending %s"
msgstr ""

#: heat/engine/resource.py:542
#, python-format
msgid "State %s invalid for resume"
msgstr ""

#: heat/engine/resource.py:546
#, python-format
msgid "resuming %s"
msgstr ""

#: heat/engine/resource.py:582
msgid "limit cannot be less than 4"
msgstr ""

#: heat/engine/resource.py:588
#, python-format
msgid "Validating %s"
msgstr ""

#: heat/engine/resource.py:597
#, python-format
msgid "Invalid DeletionPolicy %s"
msgstr ""

#: heat/engine/resource.py:601
msgid "Snapshot DeletionPolicy not supported"
msgstr ""

#: heat/engine/resource.py:619
#, python-format
msgid "deleting %s"
msgstr ""

#: heat/engine/resource.py:641
#, python-format
msgid "Delete %s"
msgstr ""

#: heat/engine/resource.py:651
msgid "Error marking resource deletion failed"
msgstr ""

#: heat/engine/resource.py:682
#, python-format
msgid "db error %s"
msgstr ""

#: heat/engine/resource.py:703 heat/engine/resource.py:714
#: heat/engine/resource.py:732
#, python-format
msgid "DB error %s"
msgstr ""

#: heat/engine/resource.py:835
#, python-format
msgid "Cannot signal resource during %s"
msgstr ""

#: heat/engine/resource.py:839
#, python-format
msgid "Resource %s is not able to receive a signal"
msgstr ""

#: heat/engine/resource.py:846
#, python-format
msgid "signal %(name)s : %(msg)s"
msgstr ""

#: heat/engine/resource.py:859
#, python-format
msgid "Resource %s does not implement metadata update"
msgstr ""

#: heat/engine/scheduler.py:64
#, python-format
msgid "%s Timed out"
msgstr ""

#: heat/engine/scheduler.py:108
#, python-format
msgid "%s sleeping"
msgstr ""

#: heat/engine/scheduler.py:131
#, python-format
msgid "%s starting"
msgstr ""

#: heat/engine/scheduler.py:143
#, python-format
msgid "%s done (not resumable)"
msgstr ""

#: heat/engine/scheduler.py:154
#, python-format
msgid "%s timed out"
msgstr ""

#: heat/engine/scheduler.py:164
#, python-format
msgid "%s running"
msgstr ""

#: heat/engine/scheduler.py:170
#, python-format
msgid "%s complete"
msgstr ""

#: heat/engine/scheduler.py:187
#, python-format
msgid "%s cancelled"
msgstr ""

#: heat/engine/service.py:96
#, python-format
msgid "Starting listener for engine %s"
msgstr ""

#: heat/engine/service.py:323 heat/engine/service.py:381
#, python-format
msgid "template is %s"
msgstr ""

#: heat/engine/service.py:332
#, python-format
msgid "Stack create failed, status %s"
msgstr ""

#: heat/engine/service.py:339
#, python-format
msgid ""
"You have reached the maximum stacks per tenant, %d. Please delete some "
"stacks."
msgstr ""

#: heat/engine/service.py:389
msgid "Updating a stack when it is suspended"
msgstr ""

#: heat/engine/service.py:393
msgid "Updating a stack when another action is in progress"
msgstr ""

#: heat/engine/service.py:425
msgid "validate_template"
msgstr ""

#: heat/engine/service.py:427
msgid "No Template provided."
msgstr ""

#: heat/engine/service.py:507
#, python-format
msgid "deleting stack %s"
msgstr ""

#: heat/engine/service.py:522
#, python-format
msgid "abandoning stack %s"
msgstr ""

#: heat/engine/service.py:629
msgid "access_key % not found!"
msgstr ""

#: heat/engine/service.py:639
msgid "Cannot access resource from wrong stack!"
msgstr ""

#: heat/engine/service.py:641
msgid "Cannot access resource, invalid credentials!"
msgstr ""

#: heat/engine/service.py:652
#, python-format
msgid "Access denied to resource %s"
msgstr ""

#: heat/engine/service.py:733
#, python-format
msgid "suspending stack %s"
msgstr ""

#: heat/engine/service.py:747
#, python-format
msgid "resuming stack %s"
msgstr ""

#: heat/engine/service.py:801
#, python-format
msgid "Periodic watcher task for stack %s"
msgstr ""

#: heat/engine/service.py:805
#, python-format
msgid "Unable to retrieve stack %s for periodic task"
msgstr ""

#: heat/engine/service.py:819
#, python-format
msgid "periodic_task db error (%(msg)s) %(ex)s"
msgstr ""

#: heat/engine/service.py:887
#, python-format
msgid "show_watch (all) db error %s"
msgstr ""

#: heat/engine/service.py:910
msgid "Filtering by namespace/metric not yet supported"
msgstr ""

#: heat/engine/service.py:916
#, python-format
msgid "show_metric (all) db error %s"
msgstr ""

#: heat/engine/signal_responder.py:55 heat/engine/resources/user.py:214
#, python-format
msgid "Error creating ec2 keypair for user %s"
msgstr ""

#: heat/engine/signal_responder.py:96
msgid "Cannot generate signed url, no stored access/secret key"
msgstr ""

#: heat/engine/stack_lock.py:52
#, python-format
msgid "Engine %(engine)s acquired lock on stack %(stack)s"
msgstr ""

#: heat/engine/stack_lock.py:58
#, python-format
msgid "Lock on stack %(stack)s is owned by engine %(engine)s"
msgstr ""

#: heat/engine/stack_lock.py:64
#, python-format
msgid ""
"Stale lock detected on stack %(stack)s.  Engine %(engine)s will attempt "
"to steal the lock"
msgstr ""

#: heat/engine/stack_lock.py:72
#, python-format
msgid "Engine %(engine)s successfully stole the lock on stack %(stack)s"
msgstr ""

#: heat/engine/stack_lock.py:78
#, python-format
msgid ""
"The lock on stack %(stack)s was released while engine %(engine)s was "
"stealing it. Trying again"
msgstr ""

#: heat/engine/stack_lock.py:85
#, python-format
msgid ""
"Failed to steal lock on stack %(stack)s. Engine %(engine)s stole the lock"
" first"
msgstr ""

#: heat/engine/stack_lock.py:98
#, python-format
msgid "Lock was already released on stack %s!"
msgstr ""

#: heat/engine/stack_lock.py:101
#, python-format
msgid "Engine %(engine)s released lock on stack %(stack)s"
msgstr ""

#: heat/engine/stack_resource.py:71
msgid "Nested stack not found in DB"
msgstr ""

#: heat/engine/stack_resource.py:81
#, python-format
msgid "Recursion depth exceeds %d."
msgstr ""

#: heat/engine/stack_resource.py:132
#, python-format
msgid "Cannot update %s, stack not created"
msgstr ""

#: heat/engine/stack_resource.py:171
#, python-format
msgid "Nested stack update failed: %s"
msgstr ""

#: heat/engine/stack_resource.py:182
msgid "Stack not found to delete"
msgstr ""

#: heat/engine/stack_resource.py:205
#, python-format
msgid "Cannot suspend %s, stack not created"
msgstr ""

#: heat/engine/stack_resource.py:227
#, python-format
msgid "Cannot resume %s, stack not created"
msgstr ""

#: heat/engine/template.py:190 heat/engine/template.py:294
msgid "Arguments to \"Fn::Join\" must be a list"
msgstr ""

#: heat/engine/template.py:195 heat/engine/template.py:300
#, python-format
msgid "Incorrect arguments to \"Fn::Join\" should be: %s"
msgstr ""

#: heat/engine/template.py:200 heat/engine/template.py:305
msgid "Arguments to \"Fn::Join\" not fully resolved"
msgstr ""

#: heat/engine/template.py:240
msgid "Arguments to \"Fn::Select\" must be a list"
msgstr ""

#: heat/engine/template.py:245
#, python-format
msgid "Incorrect arguments to \"Fn::Select\" should be: %s"
msgstr ""

#: heat/engine/template.py:250
#, python-format
msgid "Index to \"Fn::Select\" should be either a string or an integer value: %s"
msgstr ""

#: heat/engine/template.py:269
#, python-format
msgid "\"Fn::Select\" %s"
msgstr ""

#: heat/engine/template.py:281
msgid "Arguments to \"Fn::Select\" not fully resolved"
msgstr ""

#: heat/engine/template.py:330
msgid "Arguments to \"Fn::Split\" must be a list"
msgstr ""

#: heat/engine/template.py:336 heat/engine/template.py:339
#, python-format
msgid "Incorrect arguments to \"Fn::Split\" should be: %s"
msgstr ""

#: heat/engine/template.py:360
msgid "Arguments to \"Fn::Replace\" must be a list"
msgstr ""

#: heat/engine/template.py:368
#, python-format
msgid "Incorrect arguments to \"Fn::Replace\" should be: %s"
msgstr ""

#: heat/engine/template.py:374 heat/engine/template.py:377
msgid "Arguments to \"Fn::Replace\" not fully resolved"
msgstr ""

#: heat/engine/template.py:386
#, python-format
msgid "\"Fn::Replace\" value(%(value)s) for \"%(key)s\" is not a string"
msgstr ""

#: heat/engine/template.py:402
msgid "Arguments to \"Fn::Base64\" not fully resolved"
msgstr ""

#: heat/engine/template.py:427 heat/engine/template.py:429
#: heat/engine/template.py:431 heat/engine/template.py:433
#: heat/engine/template.py:435
#, python-format
msgid "Wrong Arguments try: \"%s\""
msgstr ""

#: heat/engine/template.py:459
#, python-format
msgid "Incorrect arguments to \"Fn::ResourceFacade\" should be one of: %s"
msgstr ""

#: heat/engine/template.py:466
#, python-format
msgid "\"Fn::ResourceFacade\" \"%s\" is not specified in parent resource"
msgstr ""

#: heat/engine/update.py:81
#, python-format
msgid "Deleting backup resource %s"
msgstr ""

#: heat/engine/update.py:105
#, python-format
msgid "Swapping in backup Resource %s"
msgstr ""

#: heat/engine/update.py:111
#, python-format
msgid "Deleting backup Resource %s"
msgstr ""

#: heat/engine/update.py:116
#, python-format
msgid "Backing up existing Resource %s"
msgstr ""

#: heat/engine/update.py:136
#, python-format
msgid "Resource %(res_name)s for stack %(stack_name)s updated"
msgstr ""

#: heat/engine/watchrule.py:79
#, python-format
msgid "WatchRule.load (%(watch_name)s) db error %(ex)s"
msgstr ""

#: heat/engine/watchrule.py:214
#, python-format
msgid "ignoring %s"
msgstr ""

#: heat/engine/watchrule.py:255
#, python-format
msgid "no action for new state %s"
msgstr ""

#: heat/engine/watchrule.py:265
#, python-format
msgid "Could not process watch state %s for stack"
msgstr ""

#: heat/engine/watchrule.py:286
#, python-format
msgid "new sample:%(k)s data:%(sample)s"
msgstr ""

#: heat/engine/watchrule.py:299
#, python-format
msgid "Ignoring metric data for %s, SUSPENDED state"
msgstr ""

#: heat/engine/watchrule.py:309
#, python-format
msgid "Ignoring metric data (only accept %(metric)s) : %(data)s"
msgstr ""

#: heat/engine/watchrule.py:319
#, python-format
msgid "new watch:%(name)s data:%(data)s"
msgstr ""

#: heat/engine/watchrule.py:327
#, python-format
msgid "Invalid watch state %s"
msgstr ""

#: heat/engine/watchrule.py:339
#, python-format
msgid "Unknown watch state %s"
msgstr ""

#: heat/engine/watchrule.py:345
#, python-format
msgid "Overriding state %(self_state)s for watch %(name)s with %(state)s"
msgstr ""

#: heat/engine/watchrule.py:350
#, python-format
msgid "Unable to override state %(state)s for watch %(name)s"
msgstr ""

#: heat/engine/resources/__init__.py:41
#, python-format
msgid "Failed to load resources from %s"
msgstr ""

#: heat/engine/resources/__init__.py:67
#, python-format
msgid "Failed to read %s"
msgstr ""

#: heat/engine/resources/__init__.py:86
#, python-format
msgid "Loading %s"
msgstr ""

#: heat/engine/resources/__init__.py:91
#, python-format
msgid "Failed to parse %(dir)s/%(name)s"
msgstr ""

#: heat/engine/resources/__init__.py:95
#, python-format
msgid "Failed to read %(dir)s/%(name)s"
msgstr ""

#: heat/engine/resources/autoscaling.py:89
#: heat/engine/resources/autoscaling.py:433
#: heat/engine/resources/autoscaling.py:466
#: heat/engine/resources/autoscaling.py:471
#: heat/engine/resources/autoscaling.py:704
#: heat/engine/resources/autoscaling.py:709
#: heat/engine/resources/autoscaling.py:714
#: heat/engine/resources/instance.py:157 heat/engine/resources/instance.py:162
#: heat/engine/resources/instance.py:167 heat/engine/resources/instance.py:172
#: heat/engine/resources/instance.py:177 heat/engine/resources/instance.py:182
#: heat/engine/resources/instance.py:199 heat/engine/resources/instance.py:243
#: heat/engine/resources/loadbalancer.py:304
#: heat/engine/resources/loadbalancer.py:309
#: heat/engine/resources/loadbalancer.py:318
#: heat/engine/resources/loadbalancer.py:323
#: heat/engine/resources/loadbalancer.py:328
#: heat/engine/resources/loadbalancer.py:333 heat/engine/resources/user.py:49
#: heat/engine/resources/user.py:53 heat/engine/resources/user.py:170
#: heat/engine/resources/user.py:180
msgid "Not Implemented."
msgstr ""

#: heat/engine/resources/autoscaling.py:94
#: heat/engine/resources/autoscaling.py:438
msgid "Name of LaunchConfiguration resource."
msgstr ""

#: heat/engine/resources/autoscaling.py:100
msgid "Desired number of instances."
msgstr ""

#: heat/engine/resources/autoscaling.py:106
#: heat/engine/resources/autoscaling.py:479
msgid "List of LoadBalancer resources."
msgstr ""

#: heat/engine/resources/autoscaling.py:110
#: heat/engine/resources/autoscaling.py:487
msgid "Tags to attach to this group."
msgstr ""

#: heat/engine/resources/autoscaling.py:130
msgid "A comma-delimited list of server ip addresses. (Heat extension)."
msgstr ""

#: heat/engine/resources/autoscaling.py:444
msgid "Maximum number of instances in the group."
msgstr ""

#: heat/engine/resources/autoscaling.py:450
msgid "Minimum number of instances in the group."
msgstr ""

#: heat/engine/resources/autoscaling.py:456
#: heat/engine/resources/autoscaling.py:774
msgid "Cooldown period, in seconds."
msgstr ""

#: heat/engine/resources/autoscaling.py:461
msgid "Desired initial number of instances."
msgstr ""

#: heat/engine/resources/autoscaling.py:483
msgid "List of VPC subnet identifiers."
msgstr ""

#: heat/engine/resources/autoscaling.py:587
#, python-format
msgid "%(name)s NOT performing scaling adjustment, cooldown %(cooldown)s"
msgstr ""

#: heat/engine/resources/autoscaling.py:614
#, python-format
msgid "truncating growth to %s"
msgstr ""

#: heat/engine/resources/autoscaling.py:617
#, python-format
msgid "can not exceed %s"
msgstr ""

#: heat/engine/resources/autoscaling.py:621
#, python-format
msgid "truncating shrinkage to %s"
msgstr ""

#: heat/engine/resources/autoscaling.py:624
#, python-format
msgid "can not be less than %s"
msgstr ""

#: heat/engine/resources/autoscaling.py:628
#, python-format
msgid "no change in capacity %d"
msgstr ""

#: heat/engine/resources/autoscaling.py:659
msgid "Anything other than one VPCZoneIdentifier"
msgstr ""

#: heat/engine/resources/autoscaling.py:682
#: heat/engine/resources/instance.py:136
msgid "Glance image ID or name."
msgstr ""

#: heat/engine/resources/autoscaling.py:687
#: heat/engine/resources/instance.py:143
msgid "Nova instance type (flavor)."
msgstr ""

#: heat/engine/resources/autoscaling.py:692
#: heat/engine/resources/instance.py:149
msgid "Optional Nova keypair name."
msgstr ""

#: heat/engine/resources/autoscaling.py:696
#: heat/engine/resources/instance.py:251
msgid "User data to pass to instance."
msgstr ""

#: heat/engine/resources/autoscaling.py:700
#: heat/engine/resources/instance.py:187
msgid "Security group names to assign."
msgstr ""

#: heat/engine/resources/autoscaling.py:719
#: heat/engine/resources/instance.py:226
msgid "Scheduler hints to pass to Nova (Heat extension)."
msgstr ""

#: heat/engine/resources/autoscaling.py:752
msgid "AutoScaling group name to apply policy to."
msgstr ""

#: heat/engine/resources/autoscaling.py:757
msgid "Size of adjustment."
msgstr ""

#: heat/engine/resources/autoscaling.py:763
msgid "Type of adjustment (absolute or percentage)."
msgstr ""

#: heat/engine/resources/autoscaling.py:782
msgid "A signed url to handle the alarm. (Heat extension)."
msgstr ""

#: heat/engine/resources/autoscaling.py:812
#: heat/engine/resources/instance.py:71
#, python-format
msgid "%(name)s Alarm, new state %(state)s"
msgstr ""

#: heat/engine/resources/autoscaling.py:818
#, python-format
msgid "%(name)s NOT performing scaling action, cooldown %(cooldown)s"
msgstr ""

#: heat/engine/resources/autoscaling.py:827
#, python-format
msgid "Alarm %(alarm)s could not find scaling group named \"%(group)s\""
msgstr ""

#: heat/engine/resources/autoscaling.py:832
#, python-format
msgid "%(name)s Alarm, adjusting Group %(group)s by %(filter)s"
msgstr ""

#: heat/engine/resources/cloud_watch.py:44
msgid "Operator used to compare the specified Statistic with Threshold."
msgstr ""

#: heat/engine/resources/cloud_watch.py:56
#: heat/engine/resources/ceilometer/alarm.py:101
msgid "Description for the alarm."
msgstr ""

#: heat/engine/resources/cloud_watch.py:61
#: heat/engine/resources/ceilometer/alarm.py:50
msgid "Number of periods to evaluate over."
msgstr ""

#: heat/engine/resources/cloud_watch.py:66
msgid "Metric name watched by the alarm."
msgstr ""

#: heat/engine/resources/cloud_watch.py:70
msgid "Namespace for the metric."
msgstr ""

#: heat/engine/resources/cloud_watch.py:74
#: heat/engine/resources/ceilometer/alarm.py:61
msgid "Period (seconds) to evaluate over."
msgstr ""

#: heat/engine/resources/cloud_watch.py:79
msgid "Metric statistic to evaluate."
msgstr ""

#: heat/engine/resources/cloud_watch.py:88
msgid "A list of actions to execute when state transitions to alarm."
msgstr ""

#: heat/engine/resources/cloud_watch.py:93
msgid "A list of actions to execute when state transitions to ok."
msgstr ""

#: heat/engine/resources/cloud_watch.py:98
msgid ""
"A list of dimensions (arbitrary name/value pairs) associated with the "
"metric."
msgstr ""

#: heat/engine/resources/cloud_watch.py:103
msgid "A list of actions to execute when state transitions to insufficient-data."
msgstr ""

#: heat/engine/resources/cloud_watch.py:109
#: heat/engine/resources/ceilometer/alarm.py:77
msgid "Threshold to evaluate against."
msgstr ""

#: heat/engine/resources/cloud_watch.py:114
msgid "Unit for the metric."
msgstr ""

#: heat/engine/resources/eip.py:40
msgid "Set to \"vpc\" to have IP address allocation associated to your VPC."
msgstr ""

#: heat/engine/resources/eip.py:48
msgid "Instance ID to associate with EIP."
msgstr ""

#: heat/engine/resources/eip.py:53
msgid ""
"ID that AWS assigns to represent the allocation of the address for use "
"with Amazon VPC. Returned only for VPC elastic IP addresses."
msgstr ""

#: heat/engine/resources/eip.py:70 heat/engine/resources/eip.py:77
#, python-format
msgid "Floating IPs not found: %s"
msgstr ""

#: heat/engine/resources/eip.py:94 heat/engine/resources/eip.py:111
#, python-format
msgid "ElasticIp create %s"
msgstr ""

#: heat/engine/resources/eip.py:97
#, python-format
msgid "Domain property can not be set on resource %s without Neutron available"
msgstr ""

#: heat/engine/resources/eip.py:104
msgid ""
"No default floating IP pool configured. Set 'default_floating_pool' in "
"nova.conf."
msgstr ""

#: heat/engine/resources/eip.py:161
msgid "Instance ID to associate with EIP specified by EIP property."
msgstr ""

#: heat/engine/resources/eip.py:165
msgid "EIP address to associate with instance."
msgstr ""

#: heat/engine/resources/eip.py:169
msgid "Allocation ID for VPC EIP address."
msgstr ""

#: heat/engine/resources/eip.py:173
msgid "Network interface ID to associate with EIP."
msgstr ""

#: heat/engine/resources/eip.py:190
msgid "Skipping association, InstanceId not specified"
msgstr ""

#: heat/engine/resources/eip.py:212
msgid "Skipping association, resource not specified"
msgstr ""

#: heat/engine/resources/instance.py:45
msgid "Instance ID to be restarted."
msgstr ""

#: heat/engine/resources/instance.py:51
msgid "A signed url to handle the alarm (Heat extension)."
msgstr ""

#: heat/engine/resources/instance.py:79
#, python-format
msgid "%(name)s Alarm, can not find instance %(instance)s"
msgstr ""

#: heat/engine/resources/instance.py:84
#, python-format
msgid "%(name)s Alarm, restarting resource: %(victim)s"
msgstr ""

#: heat/engine/resources/instance.py:153
msgid "Availability zone to launch the instance in."
msgstr ""

#: heat/engine/resources/instance.py:191
msgid "Security group IDs to assign."
msgstr ""

#: heat/engine/resources/instance.py:195
msgid "Network interfaces to associate with instance."
msgstr ""

#: heat/engine/resources/instance.py:204
msgid "Subnet ID to launch instance in."
msgstr ""

#: heat/engine/resources/instance.py:208
msgid "Tags to attach to instance."
msgstr ""

#: heat/engine/resources/instance.py:255
msgid "Volumes to attach to instance."
msgstr ""

#: heat/engine/resources/instance.py:262 heat/engine/resources/volume.py:324
msgid ""
"The device where the volume is exposed on the instance. This assignment "
"may not be honored and it is advised that the path /dev/disk/by-"
"id/virtio-<VolumeId> be used instead."
msgstr ""

#: heat/engine/resources/instance.py:271 heat/engine/resources/volume.py:319
#: heat/engine/resources/volume.py:487
msgid "The ID of the volume to be attached."
msgstr ""

#: heat/engine/resources/instance.py:279
msgid "The Availability Zone where the specified instance is launched."
msgstr ""

#: heat/engine/resources/instance.py:282
msgid "Private DNS name of the specified instance."
msgstr ""

#: heat/engine/resources/instance.py:284
msgid "Public DNS name of the specified instance."
msgstr ""

#: heat/engine/resources/instance.py:286
msgid "Private IP address of the specified instance."
msgstr ""

#: heat/engine/resources/instance.py:288
msgid "Public IP address of the specified instance."
msgstr ""

#: heat/engine/resources/instance.py:473
#, python-format
msgid "Creation of server %(server)s failed: %(message)s (%(code)s)"
msgstr ""

#: heat/engine/resources/instance.py:480 heat/engine/resources/server.py:301
#, python-format
msgid "Creation of server %(server)s failed with unknown status: %(status)s"
msgstr ""

#: heat/engine/resources/instance.py:570
#, python-format
msgid "Deletion of server %s failed."
msgstr ""

#: heat/engine/resources/instance.py:618 heat/engine/resources/server.py:521
#, python-format
msgid "Cannot suspend %s, resource_id not set"
msgstr ""

#: heat/engine/resources/instance.py:624 heat/engine/resources/instance.py:678
#, python-format
msgid "Failed to find instance %s"
msgstr ""

#: heat/engine/resources/instance.py:627
#, python-format
msgid "suspending instance %s"
msgstr ""

#: heat/engine/resources/instance.py:655
#, python-format
msgid " nova reported unexpected instance[%(instance)s] status[%(status)s]"
msgstr ""

#: heat/engine/resources/instance.py:672 heat/engine/resources/server.py:567
#, python-format
msgid "Cannot resume %s, resource_id not set"
msgstr ""

#: heat/engine/resources/instance.py:681
#, python-format
msgid "resuming instance %s"
msgstr ""

#: heat/engine/resources/internet_gateway.py:76
#, python-format
msgid "Expected 1 external network, found %d"
msgstr ""

#: heat/engine/resources/internet_gateway.py:92
msgid "VPC ID for this gateway association."
msgstr ""

#: heat/engine/resources/internet_gateway.py:97
msgid "ID of the InternetGateway."
msgstr ""

#: heat/engine/resources/internet_gateway.py:101
msgid "ID of the VPNGateway to attach to the VPC."
msgstr ""

#: heat/engine/resources/loadbalancer.py:233
msgid "The Availability Zones in which to create the load balancer."
msgstr ""

#: heat/engine/resources/loadbalancer.py:238
msgid "An application health check for the instances."
msgstr ""

#: heat/engine/resources/loadbalancer.py:242
msgid ""
"The number of consecutive health probe successes required before moving "
"the instance to the healthy state."
msgstr ""

#: heat/engine/resources/loadbalancer.py:249
msgid ""
"The approximate interval, in seconds, between health checks of an "
"individual instance."
msgstr ""

#: heat/engine/resources/loadbalancer.py:255
msgid "The port being checked."
msgstr ""

#: heat/engine/resources/loadbalancer.py:260
msgid "Health probe timeout, in seconds."
msgstr ""

#: heat/engine/resources/loadbalancer.py:265
msgid ""
"The number of consecutive health probe failures required before moving "
"the instance to the unhealthy state"
msgstr ""

#: heat/engine/resources/loadbalancer.py:274
msgid "The list of instance IDs load balanced."
msgstr ""

#: heat/engine/resources/loadbalancer.py:279
msgid "One or more listeners for this load balancer."
msgstr ""

#: heat/engine/resources/loadbalancer.py:285
msgid "TCP port on which the instance server is listening."
msgstr ""

#: heat/engine/resources/loadbalancer.py:291
msgid "The external load balancer port number."
msgstr ""

#: heat/engine/resources/loadbalancer.py:296
msgid "The load balancer transport protocol to use."
msgstr ""

#: heat/engine/resources/loadbalancer.py:409
#, python-format
msgid "haproxy server:%s"
msgstr ""

#: heat/engine/resources/network_interface.py:44
msgid "Description for this interface."
msgstr ""

#: heat/engine/resources/network_interface.py:48
msgid "List of security group IDs associated with this interface."
msgstr ""

#: heat/engine/resources/network_interface.py:56
msgid "Flag indicating if traffic to or from instance is validated."
msgstr ""

#: heat/engine/resources/network_interface.py:61
msgid "Subnet ID to associate with this interface."
msgstr ""

#: heat/engine/resources/network_interface.py:68
msgid "List of tags associated with this interface."
msgstr ""

#: heat/engine/resources/network_interface.py:84
msgid "Private IP address of the network interface."
msgstr ""

#: heat/engine/resources/nova_keypair.py:49
msgid "The name of the key pair."
msgstr ""

#: heat/engine/resources/nova_keypair.py:54
msgid ""
"True if the system should remember a generated private key; False "
"otherwise."
msgstr ""

#: heat/engine/resources/nova_keypair.py:60
msgid ""
"The optional public key. This allows users to supply the public key from "
"a pre-existing key pair. If not supplied, a new key pair will be "
"generated."
msgstr ""

#: heat/engine/resources/nova_keypair.py:67
msgid "The public key."
msgstr ""

#: heat/engine/resources/nova_keypair.py:68
msgid "The private key if it has been saved."
msgstr ""

#: heat/engine/resources/nova_utils.py:64
#: heat/engine/resources/nova_utils.py:78
#, python-format
msgid "Image %s was not found in glance"
msgstr ""

#: heat/engine/resources/nova_utils.py:72
#, python-format
msgid "Error retrieving image list from nova: %s"
msgstr ""

#: heat/engine/resources/nova_utils.py:82
#, python-format
msgid "Mulitple images %s were found in glance with name"
msgstr ""

#: heat/engine/resources/nova_utils.py:243
#, python-format
msgid "Resizing to '%(flavor)s' failed, status '%(status)s'"
msgstr ""

#: heat/engine/resources/nova_utils.py:270
#, python-format
msgid "Rebuilding server failed, status '%s'"
msgstr ""

#: heat/engine/resources/nova_utils.py:290
#, python-format
msgid "Instance (%(server)s) not found: %(ex)s"
msgstr ""

#: heat/engine/resources/os_database.py:62
msgid "Name of the DB instance to create."
msgstr ""

#: heat/engine/resources/os_database.py:70
msgid "Reference to a flavor for creating DB instance."
msgstr ""

#: heat/engine/resources/os_database.py:75
msgid "Database volume size in GB."
msgstr ""

#: heat/engine/resources/os_database.py:83
msgid "List of databases to be created on DB instance creation."
msgstr ""

#: heat/engine/resources/os_database.py:90
msgid "Set of symbols and encodings."
msgstr ""

#: heat/engine/resources/os_database.py:95
msgid "Set of rules for comparing characters in a character set."
msgstr ""

#: heat/engine/resources/os_database.py:101
msgid "Specifies database names for creating databases on instance creation."
msgstr ""

#: heat/engine/resources/os_database.py:116
msgid "List of users to be created on DB instance creation."
msgstr ""

#: heat/engine/resources/os_database.py:123
msgid "User name to create a user on instance creation."
msgstr ""

#: heat/engine/resources/os_database.py:135
msgid "Password for those users on instance creation."
msgstr ""

#: heat/engine/resources/os_database.py:146
msgid "The host from which a user is allowed to connect to the database."
msgstr ""

#: heat/engine/resources/os_database.py:152
msgid "Names of databases that those users can access on instance creation."
msgstr ""

#: heat/engine/resources/os_database.py:164
msgid "Name of the availability zone for DB instance."
msgstr ""

#: heat/engine/resources/os_database.py:168
msgid "DB instance restore point."
msgstr ""

#: heat/engine/resources/os_database.py:173
msgid "Hostname of the instance"
msgstr ""

#: heat/engine/resources/os_database.py:174
msgid "Api endpoint reference of the instance"
msgstr ""

#: heat/engine/resources/os_database.py:235
msgid "Database instance creation failed."
msgstr ""

#: heat/engine/resources/os_database.py:240
#, python-format
msgid ""
"Database instance %(database)s created (flavor:%(flavor)s, "
"volume:%(volume)s)"
msgstr ""

#: heat/engine/resources/os_database.py:258
#, python-format
msgid "Database instance %s not found."
msgstr ""

#: heat/engine/resources/os_database.py:295
msgid "Databases property is required if users property is provided"
msgstr ""

#: heat/engine/resources/os_database.py:302
#, python-format
msgid "Must provide access to at least one database for user %s"
msgstr ""

#: heat/engine/resources/os_database.py:310
#, python-format
msgid "Database %s specified for user does not exist in databases."
msgstr ""

#: heat/engine/resources/random_string.py:40
msgid "Length of the string to generate."
msgstr ""

#: heat/engine/resources/random_string.py:48
msgid "Sequence of characters to build the random string from."
msgstr ""

#: heat/engine/resources/random_string.py:59
msgid ""
"Value which can be set or changed on stack update to trigger the resource"
" for replacement with a new random string . The salt value itself is "
"ignored by the random generator."
msgstr ""

#: heat/engine/resources/random_string.py:66
msgid "The random string generated by this resource"
msgstr ""

#: heat/engine/resources/resource_group.py:62
msgid "The number of instances to create."
msgstr ""

#: heat/engine/resources/resource_group.py:72
msgid ""
"Resource definition for the resources in the group. The value of this "
"property is the definition of a resource just as if it had been declared "
"in the template itself."
msgstr ""

#: heat/engine/resources/resource_group.py:78
msgid "The type of the resources in the group"
msgstr ""

#: heat/engine/resources/resource_group.py:83
msgid "Property values for the resources in the group"
msgstr ""

#: heat/engine/resources/resource_group.py:91
msgid "A list of resource IDs for the resources in the group"
msgstr ""

#: heat/engine/resources/route_table.py:46
msgid "VPC ID for where the route table is created."
msgstr ""

#: heat/engine/resources/route_table.py:53
msgid "List of tags to be attached to this resource."
msgstr ""

#: heat/engine/resources/route_table.py:122
msgid "Route table ID."
msgstr ""

#: heat/engine/resources/route_table.py:127
msgid "Subnet ID."
msgstr ""

#: heat/engine/resources/s3.py:53
msgid ""
"A predefined access control list (ACL) that grants permissions on the "
"bucket."
msgstr ""

#: heat/engine/resources/s3.py:65
msgid "Information used to configure the bucket as a static website."
msgstr ""

#: heat/engine/resources/s3.py:69
msgid "The name of the index document."
msgstr ""

#: heat/engine/resources/s3.py:73
msgid "The name of the error document."
msgstr ""

#: heat/engine/resources/s3.py:79
msgid "Tags to attach to the bucket."
msgstr ""

#: heat/engine/resources/s3.py:85
msgid "The tag key name."
msgstr ""

#: heat/engine/resources/s3.py:90
msgid "The tag value."
msgstr ""

#: heat/engine/resources/s3.py:99
msgid "The DNS name of the specified bucket."
msgstr ""

#: heat/engine/resources/s3.py:100
msgid "The website endpoint for the specified bucket."
msgstr ""

#: heat/engine/resources/s3.py:114
#, python-format
msgid "S3Bucket create container %(container)s with headers %(headers)s"
msgstr ""

#: heat/engine/resources/s3.py:146
#, python-format
msgid "S3Bucket delete container %s"
msgstr ""

#: heat/engine/resources/s3.py:151 heat/engine/resources/swift.py:133
#, python-format
msgid "Delete container failed: %s"
msgstr ""

#: heat/engine/resources/security_group.py:73
#: heat/engine/resources/neutron/security_group.py:119
msgid "Description of the security group."
msgstr ""

#: heat/engine/resources/security_group.py:78
msgid "Physical ID of the VPC."
msgstr ""

#: heat/engine/resources/security_group.py:84
msgid "List of security group ingress rules."
msgstr ""

#: heat/engine/resources/security_group.py:92
msgid "List of security group egress rules."
msgstr ""

#: heat/engine/resources/server.py:38
msgid ""
"A device name where the volume will be attached in the system at "
"/dev/device_name. This value is typically vda."
msgstr ""

#: heat/engine/resources/server.py:43
msgid ""
"The ID of the volume to boot from. Only one of volume_id or snapshot_id "
"should be provided."
msgstr ""

#: heat/engine/resources/server.py:47
msgid "The ID of the snapshot to create a volume from."
msgstr ""

#: heat/engine/resources/server.py:51
msgid ""
"The size of the volume, in GB. It is safe to leave this blank and have "
"the Compute service infer the size."
msgstr ""

#: heat/engine/resources/server.py:56
msgid ""
"Indicate whether the volume should be deleted when the server is "
"terminated."
msgstr ""

#: heat/engine/resources/server.py:63
msgid "DEPRECATED! ID of network to create a port on."
msgstr ""

#: heat/engine/resources/server.py:67
msgid "Name or ID of network to create a port on."
msgstr ""

#: heat/engine/resources/server.py:70
msgid "Fixed IP address to specify for the port created on the requested network."
msgstr ""

#: heat/engine/resources/server.py:74
msgid "ID of an existing port to associate with this server."
msgstr ""

#: heat/engine/resources/server.py:81
msgid "Optional server name."
msgstr ""

#: heat/engine/resources/server.py:84
msgid "The ID or name of the image to boot with."
msgstr ""

#: heat/engine/resources/server.py:88
msgid "Block device mappings for this server."
msgstr ""

#: heat/engine/resources/server.py:96
msgid "The ID or name of the flavor to boot onto."
msgstr ""

#: heat/engine/resources/server.py:101
msgid ""
"Policy on how to apply a flavor update; either by requesting a server "
"resize or by replacing the entire server."
msgstr ""

#: heat/engine/resources/server.py:110
msgid ""
"Policy on how to apply an image-id update; either by requesting a server "
"rebuild or by replacing the entire server"
msgstr ""

#: heat/engine/resources/server.py:118
msgid "Name of keypair to inject into the server."
msgstr ""

#: heat/engine/resources/server.py:122
msgid "Name of the administrative user to use on the server."
msgstr ""

#: heat/engine/resources/server.py:126
msgid "Name of the availability zone for server placement."
msgstr ""

#: heat/engine/resources/server.py:130
msgid "List of security group names or IDs."
msgstr ""

#: heat/engine/resources/server.py:134
msgid ""
"An ordered list of nics to be added to this server, with information "
"about connected networks, fixed ips, port etc."
msgstr ""

#: heat/engine/resources/server.py:144
msgid "Arbitrary key-value pairs specified by the client to help boot a server."
msgstr ""

#: heat/engine/resources/server.py:149
msgid ""
"Arbitrary key/value metadata to store for this server. A maximum of five "
"entries is allowed, and both keys and values must be 255 characters or "
"less."
msgstr ""

#: heat/engine/resources/server.py:156
msgid ""
"How the user_data should be formatted for the server. For HEAT_CFNTOOLS, "
"the user_data is bundled as part of the heat-cfntools cloud-init boot "
"configuration data. For RAW, the user_data is passed to Nova unmodified."
msgstr ""

#: heat/engine/resources/server.py:164
msgid "User data script to be executed by cloud-init."
msgstr ""

#: heat/engine/resources/server.py:169
msgid "A UUID for the set of servers being requested."
msgstr ""

#: heat/engine/resources/server.py:173
msgid "value for config drive either boolean, or volume-id."
msgstr ""

#: heat/engine/resources/server.py:180
msgid "Control how the disk is partitioned when the server is created."
msgstr ""

#: heat/engine/resources/server.py:186
msgid "A dict of all server details as returned by the API."
msgstr ""

#: heat/engine/resources/server.py:187
msgid "A dict of all network addresses as returned by the API."
msgstr ""

#: heat/engine/resources/server.py:189
msgid ""
"A dict of assigned network addresses of the form: {\"public\": [ip1, "
"ip2...], \"private\": [ip3, ip4]}."
msgstr ""

#: heat/engine/resources/server.py:191
msgid ""
"Convenience attribute to fetch the first assigned network address, or an "
"empty string if nothing has been assigned at this time. Result may not be"
" predictable if the server has addresses from more than one network."
msgstr ""

#: heat/engine/resources/server.py:197
msgid "AWS compatible instance name."
msgstr ""

#: heat/engine/resources/server.py:198
msgid "The manually assigned alternative public IPv4 address of the server."
msgstr ""

#: heat/engine/resources/server.py:200
msgid "The manually assigned alternative public IPv6 address of the server."
msgstr ""

#: heat/engine/resources/server.py:297
#, python-format
msgid "Creation of server %s failed."
msgstr ""

#: heat/engine/resources/server.py:465
#, python-format
msgid "Either volume_id or snapshot_id must be specified for device mapping %s"
msgstr ""

#: heat/engine/resources/server.py:474
#, python-format
msgid "Neither image nor bootable volume is specified for instance %s"
msgstr ""

#: heat/engine/resources/server.py:482 heat/tests/test_server.py:418
#, python-format
msgid ""
"Properties \"uuid\" and \"network\" are both set to the network "
"\"%(network)s\" for the server \"%(server)s\". The \"uuid\" property is "
"deprecated. Use only \"network\" property."
msgstr ""

#: heat/engine/resources/server.py:490
#, python-format
msgid ""
"For the server \"%(server)s\" the \"uuid\" property is set to network "
"\"%(network)s\". \"uuid\" property is deprecated. Use \"network\" "
"property instead."
msgstr ""

#: heat/engine/resources/server.py:527 heat/engine/resources/server.py:573
#, python-format
msgid "Failed to find server %s"
msgstr ""

#: heat/engine/resources/server.py:530
#, python-format
msgid "suspending server %s"
msgstr ""

#: heat/engine/resources/server.py:547
#, python-format
msgid "%(name)s check_suspend_complete status = %(status)s"
msgstr ""

#: heat/engine/resources/server.py:554
#, python-format
msgid "Suspend of server %(server)s failed with unknown status: %(status)s"
msgstr ""

#: heat/engine/resources/server.py:576
#, python-format
msgid "resuming server %s"
msgstr ""

#: heat/engine/resources/stack.py:44
msgid ""
"The URL of a template that specifies the stack to be created as a "
"resource."
msgstr ""

#: heat/engine/resources/stack.py:51
msgid "The length of time, in minutes, to wait for the nested stack creation."
msgstr ""

#: heat/engine/resources/stack.py:57
msgid "The set of parameters passed to this nested stack."
msgstr ""

#: heat/engine/resources/stack.py:68 heat/engine/resources/stack.py:101
#, python-format
msgid "Could not fetch remote template '%(url)s': %(exc)s"
msgstr ""

#: heat/engine/resources/subnet.py:43
msgid "Availablity zone in which you want the subnet."
msgstr ""

#: heat/engine/resources/subnet.py:47
msgid "CIDR block to apply to subnet."
msgstr ""

#: heat/engine/resources/subnet.py:52
msgid ""
"Ref structure that contains the ID of the VPC on which you want to create"
" the subnet."
msgstr ""

#: heat/engine/resources/subnet.py:60
msgid "List of tags to attach to this resource."
msgstr ""

#: heat/engine/resources/swift.py:40
msgid "Name for the container. If not specified, a unique name will be generated."
msgstr ""

#: heat/engine/resources/swift.py:45
msgid "Specify the ACL permissions on who can read objects in the container."
msgstr ""

#: heat/engine/resources/swift.py:50
msgid "Specify the ACL permissions on who can write objects to the container."
msgstr ""

#: heat/engine/resources/swift.py:55
msgid ""
"A map of user-defined meta data to associate with the container. Each key"
" in the map will set the header X-Container-Meta-{key} with the "
"corresponding value."
msgstr ""

#: heat/engine/resources/swift.py:62
msgid ""
"A map of user-defined meta data to associate with the account. Each key "
"in the map will set the header X-Account-Meta-{key} with the "
"corresponding value."
msgstr ""

#: heat/engine/resources/swift.py:70
msgid "The host from the container URL."
msgstr ""

#: heat/engine/resources/swift.py:71
msgid "The URL of the container."
msgstr ""

#: heat/engine/resources/swift.py:72
msgid "The parent URL of the container."
msgstr ""

#: heat/engine/resources/swift.py:73
msgid "The number of objects stored in the container."
msgstr ""

#: heat/engine/resources/swift.py:74
msgid "The number of bytes stored in the container."
msgstr ""

#: heat/engine/resources/swift.py:75
msgid "A map containing all headers for the container."
msgstr ""

#: heat/engine/resources/swift.py:111
#, python-format
msgid ""
"SwiftContainer create container %(container)s with container headers "
"%(container_headers)s and account headers %(account_headers)s"
msgstr ""

#: heat/engine/resources/swift.py:127
#, python-format
msgid "SwiftContainer delete container %s"
msgstr ""

#: heat/engine/resources/swift.py:153
#, python-format
msgid "Head container failed: %s"
msgstr ""

#: heat/engine/resources/template_resource.py:53
msgid "Only Templates with an extension of .yaml or .template are supported"
msgstr ""

#: heat/engine/resources/template_resource.py:141
#, python-format
msgid "Could not fetch remote template '%(name)s': %(exc)s"
msgstr ""

#: heat/engine/resources/template_resource.py:154
#, python-format
msgid "Unknown error retrieving %s"
msgstr ""

#: heat/engine/resources/template_resource.py:163
#, python-format
msgid "Required property %(n)s for facade %(type)s missing in provider"
msgstr ""

#: heat/engine/resources/template_resource.py:171
#, python-format
msgid ""
"Property %(n)s type mismatch between facade %(type)s (%(fs_type)s) and "
"provider (%(ps_type)s)"
msgstr ""

#: heat/engine/resources/template_resource.py:180
#, python-format
msgid "Provider requires property %(n)s unknown in facade %(type)s"
msgstr ""

#: heat/engine/resources/template_resource.py:187
#, python-format
msgid "Attribute %(attr)s for facade %(type)s missing in provider"
msgstr ""

#: heat/engine/resources/template_resource.py:200
#, python-format
msgid "Failed to retrieve template data: %s"
msgstr ""

#: heat/engine/resources/user.py:57
msgid "A login profile for the user."
msgstr ""

#: heat/engine/resources/user.py:66
msgid "Access policies to apply to the user."
msgstr ""

#: heat/engine/resources/user.py:81 heat/engine/resources/user.py:151
#, python-format
msgid "Ignoring policy %s, must be string resource name"
msgstr ""

#: heat/engine/resources/user.py:88
#, python-format
msgid "Policy %(policy)s does not exist in stack %(stack)s"
msgstr ""

#: heat/engine/resources/user.py:94
#, python-format
msgid "Policy %s is not an AccessPolicy resource"
msgstr ""

#: heat/engine/resources/user.py:117
msgid "Cannot delete User resource before user created!"
msgstr ""

#: heat/engine/resources/user.py:127
msgid "Cannot suspend User resource before user created!"
msgstr ""

#: heat/engine/resources/user.py:134
msgid "Cannot resume User resource before user created!"
msgstr ""

#: heat/engine/resources/user.py:175
msgid "The name of the user that the new key will belong to."
msgstr ""

#: heat/engine/resources/user.py:209
#, python-format
msgid "could not find user %s"
msgstr ""

#: heat/engine/resources/user.py:227
#, python-format
msgid "Error deleting %s - user not found"
msgstr ""

#: heat/engine/resources/user.py:244 heat/engine/resources/user.py:253
#, python-format
msgid "could not get secret for %(username)s Error:%(msg)s"
msgstr ""

#: heat/engine/resources/user.py:261
#, python-format
msgid "Unexpected ec2 keypair, for %(id)s access %(access)s"
msgstr ""

#: heat/engine/resources/user.py:299
msgid ""
"Resources that users are allowed to access by the DescribeStackResource "
"API."
msgstr ""

#: heat/engine/resources/user.py:310
#, python-format
msgid "AccessPolicy resource %s not in stack"
msgstr ""

#: heat/engine/resources/volume.py:55 heat/engine/resources/volume.py:373
msgid "The availability zone in which the volume will be created."
msgstr ""

#: heat/engine/resources/volume.py:60 heat/engine/resources/volume.py:377
#: heat/engine/resources/volume.py:422
msgid "The size of the volume in GB."
msgstr ""

#: heat/engine/resources/volume.py:64
msgid "If specified, the backup used as the source to create the volume."
msgstr ""

#: heat/engine/resources/volume.py:69
msgid "The list of tags to associate with the volume."
msgstr ""

#: heat/engine/resources/volume.py:159
msgid "cant delete volume when in-use"
msgstr ""

#: heat/engine/resources/volume.py:160
msgid "Volume in use"
msgstr ""

#: heat/engine/resources/volume.py:227
#, python-format
msgid "%(name)s - volume status: %(status)s"
msgstr ""

#: heat/engine/resources/volume.py:235
#, python-format
msgid "%s - complete"
msgstr ""

#: heat/engine/resources/volume.py:268 heat/engine/resources/volume.py:301
#, python-format
msgid "%s - volume not found"
msgstr ""

#: heat/engine/resources/volume.py:284
#, python-format
msgid "%s - volume still in use"
msgstr ""

#: heat/engine/resources/volume.py:295
#, python-format
msgid "%(name)s - status: %(status)s"
msgstr ""

#: heat/engine/resources/volume.py:314
msgid "The ID of the instance to which the volume attaches."
msgstr ""

#: heat/engine/resources/volume.py:381
msgid "If specified, the snapshot to create the volume from."
msgstr ""

#: heat/engine/resources/volume.py:385
msgid "If specified, the backup to create the volume from."
msgstr ""

#: heat/engine/resources/volume.py:389
msgid "A name used to distinguish the volume."
msgstr ""

#: heat/engine/resources/volume.py:393
msgid "A description of the volume."
msgstr ""

#: heat/engine/resources/volume.py:397
msgid "If specified, the type of volume to use, mapping to a specific backend."
msgstr ""

#: heat/engine/resources/volume.py:402
msgid "Key/value pairs to associate with the volume."
msgstr ""

#: heat/engine/resources/volume.py:406
msgid "DEPRECATED: use \"image\" instead."
msgstr ""

#: heat/engine/resources/volume.py:410
msgid "If specified, the name or ID of the image to create the volume from."
msgstr ""

#: heat/engine/resources/volume.py:415
msgid "If specified, the volume to use as source."
msgstr ""

#: heat/engine/resources/volume.py:420
msgid "The availability zone in which the volume is  located."
msgstr ""

#: heat/engine/resources/volume.py:423
msgid "The snapshot the volume was created from, if any."
msgstr ""

#: heat/engine/resources/volume.py:424
msgid "Name of the volume."
msgstr ""

#: heat/engine/resources/volume.py:425
msgid "Description of the volume."
msgstr ""

#: heat/engine/resources/volume.py:426
msgid "The type of the volume mapping to a backend, if any."
msgstr ""

#: heat/engine/resources/volume.py:428
msgid "Key/value pairs associated with the volume."
msgstr ""

#: heat/engine/resources/volume.py:429
msgid "The volume used as source, if any."
msgstr ""

#: heat/engine/resources/volume.py:430
msgid "The current status of the volume."
msgstr ""

#: heat/engine/resources/volume.py:431
msgid "The timestamp indicating volume creation."
msgstr ""

#: heat/engine/resources/volume.py:432
msgid "Boolean indicating if the volume can be booted or not."
msgstr ""

#: heat/engine/resources/volume.py:482
msgid "The ID of the server to which the volume attaches."
msgstr ""

#: heat/engine/resources/volume.py:492
msgid ""
"The location where the volume is exposed on the instance. This assignment"
" may not be honored and it is advised that the path /dev/disk/by-"
"id/virtio-<VolumeId> be used instead."
msgstr ""

#: heat/engine/resources/vpc.py:44
msgid "CIDR block to apply to the VPC."
msgstr ""

#: heat/engine/resources/vpc.py:48
msgid ""
"Allowed tenancy of instances launched in the VPC. default - any tenancy; "
"dedicated - instance will be dedicated, regardless of the tenancy option "
"specified at instance launch."
msgstr ""

#: heat/engine/resources/vpc.py:62
msgid "List of tags to attach to the instance."
msgstr ""

#: heat/engine/resources/vpc.py:105
#, python-format
msgid "Multiple routers found with name %s"
msgstr ""

#: heat/engine/resources/wait_condition.py:76
#, python-format
msgid "Overwriting Metadata item for UniqueId %s!"
msgstr ""

#: heat/engine/resources/wait_condition.py:86
#, python-format
msgid "Metadata failed validation for %s"
msgstr ""

#: heat/engine/resources/wait_condition.py:87
msgid "Metadata format invalid"
msgstr ""

#: heat/engine/resources/wait_condition.py:125
#, python-format
msgid "%(len)d of %(count)d received"
msgstr ""

#: heat/engine/resources/wait_condition.py:144
msgid ""
"A reference to the wait condition handle used to signal this wait "
"condition."
msgstr ""

#: heat/engine/resources/wait_condition.py:150
msgid "The number of seconds to wait for the correct number of signals to arrive."
msgstr ""

#: heat/engine/resources/wait_condition.py:159
msgid ""
"The number of success signals that must be received before the stack "
"creation process continues."
msgstr ""

#: heat/engine/resources/wait_condition.py:178
#, python-format
msgid "WaitCondition invalid Handle tenant %s"
msgstr ""

#: heat/engine/resources/wait_condition.py:181
#: heat/engine/resources/wait_condition.py:184
#, python-format
msgid "WaitCondition invalid Handle stack %s"
msgstr ""

#: heat/engine/resources/wait_condition.py:187
#: heat/engine/resources/wait_condition.py:191
#, python-format
msgid "WaitCondition invalid Handle %s"
msgstr ""

#: heat/engine/resources/wait_condition.py:205
#, python-format
msgid "%(name)s Timed out (%(timeout)s)"
msgstr ""

#: heat/engine/resources/wait_condition.py:213
#, python-format
msgid "%(name)s Failed (%(failure)s)"
msgstr ""

#: heat/engine/resources/wait_condition.py:218
#, python-format
msgid "%s Succeeded"
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:40
msgid "Operator used to compare specified statistic with threshold."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:56
msgid "Meter name watched by the alarm."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:67
msgid "Meter statistic to evaluate."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:83
msgid "A list of URLs (webhooks) to invoke when state transitions to alarm."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:89
msgid "A list of URLs (webhooks) to invoke when state transitions to ok."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:95
msgid ""
"A list of URLs (webhooks) to invoke when state transitions to "
"insufficient-data."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:106
msgid "True if alarm evaluation/actioning is enabled."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:112
msgid ""
"False to trigger actions when the threshold is reached AND the alarm's "
"state has changed. By default, actions are called each time the threshold"
" is reached."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:120
msgid ""
"Meter should match this resource metadata (key=value) additionally to the"
" meter_name."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:62
msgid "Name for the Firewall."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:63
msgid "Description of the Firewall."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:64
msgid "The administrative state of the Firewall."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:65
msgid "Unique identifier of the FirewallPolicy used to  create the Firewall."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:67
msgid "The status of the Firewall."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:68
#: heat/engine/resources/neutron/firewall.py:268
msgid "Id of the tenant owning the Firewall."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:69
#: heat/engine/resources/neutron/floatingip.py:69
#: heat/engine/resources/neutron/loadbalancer.py:118
#: heat/engine/resources/neutron/loadbalancer.py:423
#: heat/engine/resources/neutron/net.py:79
#: heat/engine/resources/neutron/port.py:141
#: heat/engine/resources/neutron/router.py:89
#: heat/engine/resources/neutron/subnet.py:119
#: heat/engine/resources/neutron/vpnservice.py:83
msgid "All attributes."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:139
msgid "Name for the FirewallPolicy."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:140
msgid "Description of the FirewallPolicy."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:141
msgid "List of FirewallRules in this FirewallPolicy."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:142
msgid "Shared status of this FirewallPolicy."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:143
msgid "Audit status of this FirewallPolicy."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:144
msgid "Id of the tenant owning the FirewallPolicy."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:253
msgid "Name for the FirewallRule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:254
msgid "Description of the FirewallRule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:255
msgid ""
"Unique identifier of the FirewallPolicy to which this FirewallRule "
"belongs."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:257
msgid "Shared status of this FirewallRule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:258
msgid "Protocol value for this FirewallRule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:259
msgid "Ip_version for this FirewallRule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:260
msgid "Source ip_address for this FirewallRule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:261
msgid "Destination ip_address for this FirewallRule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:263
msgid "Source port range for this FirewallRule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:264
msgid "Destination port range for this FirewallRule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:265
msgid "Allow or deny action for this FirewallRule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:266
msgid "Indicates whether this FirewallRule is enabled or not."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:267
msgid "Position of the rule within the FirewallPolicy."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:38
msgid "ID of network to allocate floating IP from."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:43
msgid ""
"Extra parameters to include in the \"floatingip\" object in the creation "
"request. Parameters are often specific to installed hardware or "
"extensions."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:50
#: heat/engine/resources/neutron/floatingip.py:117
msgid ""
"ID of an existing port with at least one IP address to associate with "
"this floating IP."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:55
#: heat/engine/resources/neutron/floatingip.py:122
msgid "IP address to use if the port has multiple addresses."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:60
msgid "ID of the router used as gateway, set when associated with a port."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:62
msgid "The tenant owning this floating IP."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:63
msgid "ID of the network in which this IP is allocated."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:65
msgid "IP address of the associated port, if specified."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:67
msgid "The allocated address of this IP."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:68
msgid "ID of the port associated with this IP."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:112
msgid "ID of the floating IP to associate."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:46
#: heat/engine/resources/neutron/loadbalancer.py:104
msgid "The minimum time in seconds between regular connections of the member."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:53
#: heat/engine/resources/neutron/loadbalancer.py:114
msgid "One of predefined health monitor types."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:61
#: heat/engine/resources/neutron/loadbalancer.py:110
msgid ""
"Number of permissible connection failures before changing the member "
"status to INACTIVE."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:68
#: heat/engine/resources/neutron/loadbalancer.py:112
msgid ""
"Maximum number of seconds for a monitor to wait for a connection to be "
"established before it times out."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:75
msgid "The administrative state of the health monitor."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:81
#: heat/engine/resources/neutron/loadbalancer.py:108
msgid "The HTTP method used for requests by the monitor of type HTTP."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:87
#: heat/engine/resources/neutron/loadbalancer.py:106
msgid ""
"The list of HTTP status codes expected in response from the member to "
"declare it healthy."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:93
#: heat/engine/resources/neutron/loadbalancer.py:115
msgid ""
"The HTTP path used in the HTTP request used by the monitor to test a "
"member health."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:102
msgid "The administrative state of this health monitor."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:117
msgid "Tenant owning the health monitor."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:172
msgid "Protocol for balancing."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:180
#: heat/engine/resources/neutron/loadbalancer.py:257
msgid "The subnet on which the members of the pool will be located."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:185
#: heat/engine/resources/neutron/loadbalancer.py:259
msgid "The algorithm used to distribute load between the members of the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:196
#: heat/engine/resources/neutron/loadbalancer.py:255
msgid "Name of the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:200
#: heat/engine/resources/neutron/loadbalancer.py:261
msgid "Description of the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:205
#: heat/engine/resources/neutron/loadbalancer.py:254
msgid "The administrative state of this pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:211
msgid "IP address and port of the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:215
msgid "Name of the vip."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:219
msgid "Description of the vip."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:223
msgid "IP address of the vip."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:227
msgid "The maximum number of connections per second allowed for the vip."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:232
msgid ""
"TCP port on which to listen for client traffic that is associated with "
"the vip address."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:238
msgid "The administrative state of this vip."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:246
msgid "List of health monitors associated with the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:256
msgid "Protocol to balance."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:262
msgid "Tenant owning the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:263
msgid "Vip associated with the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:381
#: heat/engine/resources/neutron/loadbalancer.py:420
#: heat/engine/resources/neutron/loadbalancer.py:482
msgid "The ID of the load balancing pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:387
msgid "IP address of the pool member on the pool network."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:392
msgid "TCP port on which the pool member listens for requests or connections."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:401
msgid "Weight of pool member in the pool (default to 1)."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:409
msgid "The administrative state of the pool member."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:415
msgid "The administrative state of this pool member."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:417
msgid "Tenant owning the pool member."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:418
msgid "Weight of the pool member in the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:419
msgid "IP address of the pool member."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:421
msgid "TCP port on which the pool member listens forrequests or connections."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:488
msgid "Port number on which the servers are running on the members."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:493
msgid "The list of Nova server IDs load balanced."
msgstr ""

#: heat/engine/resources/neutron/net.py:38
msgid ""
"A string specifying a symbolic name for the network, which is not "
"required to be unique."
msgstr ""

#: heat/engine/resources/neutron/net.py:44
msgid ""
"Extra parameters to include in the \"network\" object in the creation "
"request. Parameters are often specific to installed hardware or "
"extensions."
msgstr ""

#: heat/engine/resources/neutron/net.py:52
msgid "A boolean value specifying the administrative status of the network."
msgstr ""

#: heat/engine/resources/neutron/net.py:59
msgid ""
"The ID of the tenant which will own the network. Only administrative "
"users can set the tenant identifier; this cannot be changed using "
"authorization policies."
msgstr ""

#: heat/engine/resources/neutron/net.py:65
msgid ""
"Whether this network should be shared across all tenants. Note that the "
"default policy setting restricts usage of this attribute to "
"administrative users only."
msgstr ""

#: heat/engine/resources/neutron/net.py:74
msgid "The status of the network."
msgstr ""

#: heat/engine/resources/neutron/net.py:75
msgid "The name of the network."
msgstr ""

#: heat/engine/resources/neutron/net.py:76
msgid "Subnets of this network."
msgstr ""

#: heat/engine/resources/neutron/net.py:77
msgid "The administrative status of the network."
msgstr ""

#: heat/engine/resources/neutron/net.py:78
msgid "The tenant owning this network."
msgstr ""

#: heat/engine/resources/neutron/net.py:134
msgid ""
"The ID of the network you want to be scheduled by the dhcp_agent. Note "
"that the default policy setting in Neutron restricts usage of this "
"property to administrative users only."
msgstr ""

#: heat/engine/resources/neutron/net.py:142
msgid ""
"The ID of the dhcp-agent to schedule the network. Note that the default "
"policy setting in Neutron restricts usage of this property to "
"administrative users only."
msgstr ""

#: heat/engine/resources/neutron/neutron.py:123
#, python-format
msgid "failed to fetch resource attributes: %s"
msgstr ""

#: heat/engine/resources/neutron/port.py:54
msgid "Network ID this port belongs to."
msgstr ""

#: heat/engine/resources/neutron/port.py:59
msgid "A symbolic name for this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:63
msgid ""
"Extra parameters to include in the \"port\" object in the creation "
"request."
msgstr ""

#: heat/engine/resources/neutron/port.py:69
#: heat/engine/resources/neutron/port.py:129
msgid "The administrative state of this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:75
msgid "Desired IPs for this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:82
msgid "Subnet in which to allocate the IP address for this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:87
msgid "IP address desired in the subnet for this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:95
msgid "MAC address to give to this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:99
msgid "Device ID of this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:103
msgid "Security group IDs to associate with this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:109
msgid "Additional MAC/IP address pairs allowed to pass through the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:116
msgid "MAC address to allow through this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:120
msgid "IP address to allow through this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:130
msgid "Unique identifier for the device."
msgstr ""

#: heat/engine/resources/neutron/port.py:131
msgid "Name of the network owning the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:132
msgid "Fixed IP addresses."
msgstr ""

#: heat/engine/resources/neutron/port.py:133
msgid "MAC address of the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:134
msgid "Friendly name of the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:135
msgid "Unique identifier for the network owning the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:136
msgid "A list of security groups for the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:137
msgid "The status of the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:138
msgid "Tenant owning the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:139
msgid "Additional MAC/IP address pairs allowed to pass through a port."
msgstr ""

#: heat/engine/resources/neutron/port.py:214
#, python-format
msgid "updating port with %s"
msgstr ""

#: heat/engine/resources/neutron/router.py:54
msgid "External network gateway configuration for a router."
msgstr ""

#: heat/engine/resources/neutron/router.py:58
msgid "ID or name of the external network for the gateway."
msgstr ""

#: heat/engine/resources/neutron/router.py:64
msgid "Enables Source NAT on the router gateway."
msgstr ""

#: heat/engine/resources/neutron/router.py:84
msgid "The status of the router."
msgstr ""

#: heat/engine/resources/neutron/router.py:85
msgid "Gateway network for the router."
msgstr ""

#: heat/engine/resources/neutron/router.py:86
msgid "Friendly name of the router."
msgstr ""

#: heat/engine/resources/neutron/router.py:87
msgid "Administrative state of the router."
msgstr ""

#: heat/engine/resources/neutron/router.py:88
msgid "Tenant owning the router."
msgstr ""

#: heat/engine/resources/neutron/router.py:145
msgid "The router id."
msgstr ""

#: heat/engine/resources/neutron/router.py:150
msgid "The subnet id, either subnet_id or port_id should be specified."
msgstr ""

#: heat/engine/resources/neutron/router.py:155
msgid "The port id, either subnet_id or port_id should be specified."
msgstr ""

#: heat/engine/resources/neutron/router.py:216
msgid ""
"RouterGateway resource is deprecated and should not be used. Instead use "
"the `external_gateway_info` property in the router resource to set up the"
" gateway."
msgstr ""

#: heat/engine/resources/neutron/router.py:294
msgid ""
"The ID of the router you want to be scheduled by the l3_agent. Note that "
"the default policy setting in Neutron restricts usage of this property to"
" administrative users only."
msgstr ""

#: heat/engine/resources/neutron/router.py:302
msgid ""
"The ID of the l3-agent to schedule the router. Note that the default "
"policy setting in Neutron restricts usage of this property to "
"administrative users only."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:50
msgid ""
"The direction in which the security group rule is applied. For a compute "
"instance, an ingress security group rule matches traffic that is incoming"
" (ingress) for that instance. An egress rule is applied to traffic "
"leaving the instance."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:62
msgid "Ethertype of the traffic."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:70
msgid ""
"The minimum port number in the range that is matched by the security "
"group rule. If the protocol is TCP or UDP, this value must be less than "
"or equal to the value of the port_range_max attribute. If the protocol is"
" ICMP, this value must be an ICMP type."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:78
msgid ""
"The maximum port number in the range that is matched by the security "
"group rule. The port_range_min attribute constrains the port_range_max "
"attribute. If the protocol is ICMP, this value must be an ICMP type."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:85
msgid ""
"The protocol that is matched by the security group rule. Valid values "
"include tcp, udp, and icmp."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:90
msgid "Whether to specify a remote group or a remote IP prefix."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:99
msgid ""
"The remote group ID to be associated with this security group rule. If no"
" value is specified then this rule will use this security group for the "
"remote_group_id."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:105
msgid ""
"The remote IP prefix (CIDR) to be associated with this security group "
"rule."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:113
msgid ""
"A string specifying a symbolic name for the security group, which is not "
"required to be unique."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:124
msgid "List of security group rules."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:144
msgid "Security groups cannot be assigned the name \"default\"."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:108
msgid "Friendly name of the subnet."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:109
msgid "Parent network of the subnet."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:110
msgid "Tenant owning the subnet."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:111
msgid "Ip allocation pools and their ranges."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:112
msgid "Ip of the subnet's gateway."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:113
msgid "Ip version for the subnet."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:114
msgid "CIDR block notation for this subnet."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:116
msgid "List of dns nameservers."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:117
msgid "'true' if DHCP is enabled for this subnet; 'false' otherwise."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:44
msgid "Name for the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:49
msgid "Description for the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:54
msgid "Administrative state for the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:60
msgid "Unique identifier for the subnet in which the vpn service will be created."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:66
msgid ""
"Unique identifier for the router to which the vpn service will be "
"inserted."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:73
msgid "The administrative state of the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:74
msgid "The description of the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:75
msgid "The name of the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:76
msgid "The unique identifier of the router to which the vpn service was inserted."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:78
msgid "The status of the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:79
msgid "The unique identifier of the subnet in which the vpn service was created."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:81
msgid "The unique identifier of the tenant owning the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:139
msgid "Name for the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:144
msgid "Description for the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:149
msgid "Remote branch router public IPv4 address or IPv6 address or FQDN."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:155
msgid "Remote branch router identity."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:160
msgid "Remote subnet(s) in CIDR format."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:165
msgid "Maximum transmission unit size (in bytes) for the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:171
msgid "Dead Peer Detection protocol configuration for the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:176
msgid "Controls DPD protocol mode."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:186
msgid "Number of seconds for the DPD delay."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:191
msgid "Number of seconds for the DPD timeout."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:198
msgid "Pre-shared key string for the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:203
msgid "Initiator state in lowercase for the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:211
msgid "Administrative state for the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:217
msgid ""
"Unique identifier for the ike policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:223
msgid ""
"Unique identifier for the ipsec policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:229
msgid ""
"Unique identifier for the vpn service associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:236
msgid "The administrative state of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:238
msgid "The authentication mode of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:240
msgid "The description of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:241
msgid ""
"The dead peer detection protocol configuration of the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:243
msgid ""
"The unique identifier of ike policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:245
msgid "The initiator of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:246
msgid ""
"The unique identifier of ipsec policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:248
msgid ""
"The maximum transmission unit size (in bytes) of the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:250
msgid "The name of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:251
msgid "The remote branch router public IPv4 address or IPv6 address or FQDN."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:253
msgid "The remote subnet(s) in CIDR format of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:255
msgid "The remote branch router identity of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:257
msgid "The pre-shared key string of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:258
msgid "The route mode of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:259
msgid "The status of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:260
msgid "The unique identifier of the tenant owning the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:262
msgid ""
"The unique identifier of vpn service associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:318
msgid "Name for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:323
msgid "Description for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:328
msgid "Authentication hash algorithm for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:336
msgid "Encryption algorithm for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:345
msgid "Negotiation mode for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:353
msgid "Safety assessment lifetime configuration for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:357
#: heat/engine/resources/neutron/vpnservice.py:505
msgid "Safety assessment lifetime units."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:365
#: heat/engine/resources/neutron/vpnservice.py:514
msgid "Safety assessment lifetime value in specified units."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:373
msgid "Perfect forward secrecy in lowercase for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:381
msgid "Version for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:390
msgid "The authentication hash algorithm used by the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:392
msgid "The description of the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:393
msgid "The encryption algorithm used by the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:395
msgid "The version of the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:396
msgid "The safety assessment lifetime configuration for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:398
msgid "The name of the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:399
msgid "The perfect forward secrecy of the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:400
msgid "The negotiation mode of the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:402
msgid "The unique identifier of the tenant owning the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:457
msgid "Name for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:462
msgid "Description for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:467
msgid "Transform protocol for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:475
msgid "Encapsulation mode for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:483
msgid "Authentication hash algorithm for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:491
msgid "Encryption algorithm for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:500
msgid "Safety assessment lifetime configuration for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:522
msgid "Perfect forward secrecy for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:531
msgid "The authentication hash algorithm of the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:533
msgid "The description of the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:534
msgid "The encapsulation mode of the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:535
msgid "The encryption algorithm of the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:537
msgid "The safety assessment lifetime configuration of the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:539
msgid "The name of the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:540
msgid "The perfect forward secrecy of the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:541
msgid "The unique identifier of the tenant owning the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:543
msgid "The transform protocol of the ipsec policy."
msgstr ""

#: heat/openstack/common/eventlet_backdoor.py:140
#, python-format
msgid "Eventlet backdoor listening on %(port)s for process %(pid)d"
msgstr ""

#: heat/openstack/common/excutils.py:62
#, python-format
msgid "Original exception being dropped: %s"
msgstr ""

#: heat/openstack/common/excutils.py:91
#, python-format
msgid "Unexpected exception occurred %d time(s)... retrying."
msgstr ""

#: heat/openstack/common/fileutils.py:63
#, python-format
msgid "Reloading cached file %s"
msgstr ""

#: heat/openstack/common/lockutils.py:103
#, python-format
msgid "Could not release the acquired lock `%s`"
msgstr ""

#: heat/openstack/common/lockutils.py:168
#, python-format
msgid "Got semaphore \"%(lock)s\""
msgstr ""

#: heat/openstack/common/lockutils.py:177
#, python-format
msgid "Attempting to grab file lock \"%(lock)s\""
msgstr ""

#: heat/openstack/common/lockutils.py:187
#, python-format
msgid "Created lock path: %s"
msgstr ""

#: heat/openstack/common/lockutils.py:205
#, python-format
msgid "Got file lock \"%(lock)s\" at %(path)s"
msgstr ""

#: heat/openstack/common/lockutils.py:209
#, python-format
msgid "Released file lock \"%(lock)s\" at %(path)s"
msgstr ""

#: heat/openstack/common/lockutils.py:247
#, python-format
msgid "Got semaphore / lock \"%(function)s\""
msgstr ""

#: heat/openstack/common/lockutils.py:251
#, python-format
msgid "Semaphore / lock released \"%(function)s\""
msgstr ""

#: heat/openstack/common/log.py:301
#, python-format
msgid "Deprecated: %s"
msgstr ""

#: heat/openstack/common/log.py:402
#, python-format
msgid "Error loading logging config %(log_config)s: %(err_msg)s"
msgstr ""

#: heat/openstack/common/log.py:453
#, python-format
msgid "syslog facility must be one of: %s"
msgstr ""

#: heat/openstack/common/log.py:623
#, python-format
msgid "Fatal call to deprecated config: %(msg)s"
msgstr ""

#: heat/openstack/common/loopingcall.py:82
#, python-format
msgid "task run outlasted interval by %s sec"
msgstr ""

#: heat/openstack/common/loopingcall.py:89
msgid "in fixed duration looping call"
msgstr ""

#: heat/openstack/common/loopingcall.py:129
#, python-format
msgid "Dynamic looping call sleeping for %.02f seconds"
msgstr ""

#: heat/openstack/common/loopingcall.py:136
msgid "in dynamic looping call"
msgstr ""

#: heat/openstack/common/policy.py:73
msgid "JSON file containing policy"
msgstr ""

#: heat/openstack/common/policy.py:76
msgid "Rule enforced when requested rule is not found"
msgstr ""

#: heat/openstack/common/policy.py:90
#, python-format
msgid "Policy doesn't allow %s to be performed."
msgstr ""

#: heat/openstack/common/policy.py:175
#, python-format
msgid "Rules must be an instance of dict or Rules, got %s instead"
msgstr ""

#: heat/openstack/common/policy.py:205
msgid "Rules successfully reloaded"
msgstr ""

#: heat/openstack/common/policy.py:251
#, python-format
msgid "Rule %s will be now enforced"
msgstr ""

#: heat/openstack/common/policy.py:266
#, python-format
msgid "Rule [%s] doesn't exist"
msgstr ""

#: heat/openstack/common/policy.py:474
#, python-format
msgid "Failed to understand rule %s"
msgstr ""

#: heat/openstack/common/policy.py:484
#, python-format
msgid "No handler for matches of kind %s"
msgstr ""

#: heat/openstack/common/policy.py:754
#, python-format
msgid "Failed to understand rule %r"
msgstr ""

#: heat/openstack/common/processutils.py:130
#, python-format
msgid "Got unknown keyword args to utils.execute: %r"
msgstr ""

#: heat/openstack/common/processutils.py:145
#, python-format
msgid "Running cmd (subprocess): %s"
msgstr ""

#: heat/openstack/common/processutils.py:169
#: heat/openstack/common/processutils.py:241
#, python-format
msgid "Result was %s"
msgstr ""

#: heat/openstack/common/processutils.py:181
#, python-format
msgid "%r failed. Retrying."
msgstr ""

#: heat/openstack/common/processutils.py:220
#, python-format
msgid "Running cmd (SSH): %s"
msgstr ""

#: heat/openstack/common/processutils.py:222
msgid "Environment not supported over SSH"
msgstr ""

#: heat/openstack/common/processutils.py:226
msgid "process_input not supported over SSH"
msgstr ""

#: heat/openstack/common/service.py:134 heat/openstack/common/service.py:346
msgid "Full set of CONF:"
msgstr ""

#: heat/openstack/common/service.py:143 heat/openstack/common/service.py:231
#, python-format
msgid "Caught %s, exiting"
msgstr ""

#: heat/openstack/common/service.py:155
msgid "Exception during rpc cleanup."
msgstr ""

#: heat/openstack/common/service.py:200
msgid "Parent process has died unexpectedly, exiting"
msgstr ""

#: heat/openstack/common/service.py:237
msgid "Unhandled exception"
msgstr ""

#: heat/openstack/common/service.py:270
msgid "Forking too fast, sleeping"
msgstr ""

#: heat/openstack/common/service.py:289
#, python-format
msgid "Started child %d"
msgstr ""

#: heat/openstack/common/service.py:316
#, python-format
msgid "Child %(pid)d killed by signal %(sig)d"
msgstr ""

#: heat/openstack/common/service.py:320
#, python-format
msgid "Child %(pid)s exited with status %(code)d"
msgstr ""

#: heat/openstack/common/service.py:324
#, python-format
msgid "pid %d not in child list"
msgstr ""

#: heat/openstack/common/service.py:354
#, python-format
msgid "Caught %s, stopping children"
msgstr ""

#: heat/openstack/common/service.py:372
#, python-format
msgid "Waiting on %d children to exit"
msgstr ""

#: heat/openstack/common/sslutils.py:50
#, python-format
msgid "Unable to find cert_file : %s"
msgstr ""

#: heat/openstack/common/sslutils.py:53
#, python-format
msgid "Unable to find ca_file : %s"
msgstr ""

#: heat/openstack/common/sslutils.py:56
#, python-format
msgid "Unable to find key_file : %s"
msgstr ""

#: heat/openstack/common/sslutils.py:98
#, python-format
msgid "Invalid SSL version : %s"
msgstr ""

#: heat/openstack/common/strutils.py:86
#, python-format
msgid "Unrecognized value '%(val)s', acceptable values are: %(acceptable)s"
msgstr ""

#: heat/openstack/common/strutils.py:182
#, python-format
msgid "Invalid string format: %s"
msgstr ""

#: heat/openstack/common/strutils.py:189
#, python-format
msgid "Unknown byte multiplier: %s"
msgstr ""

#: heat/openstack/common/crypto/utils.py:27
msgid "An unknown error occurred in crypto utils."
msgstr ""

#: heat/openstack/common/crypto/utils.py:34
#, python-format
msgid "Block size of %(given)d is too big, max = %(maximum)d"
msgstr ""

#: heat/openstack/common/crypto/utils.py:43
#, python-format
msgid "Length of %(given)d is too long, max = %(maximum)d"
msgstr ""

#: heat/openstack/common/db/exception.py:42
msgid "Invalid Parameter: Unicode is not supported by the current database."
msgstr ""

#: heat/openstack/common/db/sqlalchemy/migration.py:252
msgid "Upgrade DB using Essex release first."
msgstr ""

#: heat/openstack/common/db/sqlalchemy/session.py:551
msgid "DB exception wrapped."
msgstr ""

#: heat/openstack/common/db/sqlalchemy/session.py:619
#, python-format
msgid "Database server has gone away: %s"
msgstr ""

#: heat/openstack/common/db/sqlalchemy/session.py:702
#, python-format
msgid "SQL connection failed. %s attempts left."
msgstr ""

#: heat/openstack/common/db/sqlalchemy/test_migrations.py:103
#, python-format
msgid "Got lock \"%s\""
msgstr ""

#: heat/openstack/common/db/sqlalchemy/test_migrations.py:106
#, python-format
msgid "Lock released \"%s\""
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:58
msgid "Sort key supplied was not valid."
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:97
msgid "Id not in sort_keys; is sort_keys unique?"
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:119
msgid "Unknown sort direction, must be 'desc' or 'asc'"
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:194
#, python-format
msgid ""
"Please specify column %s in col_name_col_instance param. It is required "
"because column has unsupported type by sqlite)."
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:200
#, python-format
msgid ""
"col_name_col_instance param has wrong type of column instance for column "
"%s It should be instance of sqlalchemy.Column."
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:280
#, python-format
msgid "Deleting duplicated row with id: %(id)s from table: %(table)s"
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:301
msgid "Unsupported id columns type"
msgstr ""

#: heat/openstack/common/notifier/api.py:129
#, python-format
msgid "%s not in valid priorities"
msgstr ""

#: heat/openstack/common/notifier/api.py:145
#, python-format
msgid ""
"Problem '%(e)s' attempting to send to notification system. "
"Payload=%(payload)s"
msgstr ""

#: heat/openstack/common/notifier/api.py:164
#, python-format
msgid "Failed to load notifier %s. These notifications will not be sent."
msgstr ""

#: heat/openstack/common/notifier/list_notifier.py:112
#, python-format
msgid "Problem '%(e)s' attempting to send to notification driver %(driver)s."
msgstr ""

#: heat/openstack/common/notifier/rabbit_notifier.py:27
msgid "The rabbit_notifier is now deprecated. Please use rpc_notifier instead."
msgstr ""

#: heat/openstack/common/notifier/rpc_notifier.py:45
#: heat/openstack/common/notifier/rpc_notifier2.py:51
#, python-format
msgid "Could not send notification to %(topic)s. Payload=%(message)s"
msgstr ""

#: heat/openstack/common/rpc/__init__.py:103
#, python-format
msgid ""
"A RPC is being made while holding a lock. The locks currently held are "
"%(locks)s. This is probably a bug. Please report it. Include the "
"following: [%(stack)s]."
msgstr ""

#: heat/openstack/common/rpc/amqp.py:75
msgid "Pool creating new connection"
msgstr ""

#: heat/openstack/common/rpc/amqp.py:202
#, python-format
msgid "No calling threads waiting for msg_id : %(msg_id)s, message : %(data)s"
msgstr ""

#: heat/openstack/common/rpc/amqp.py:205
#, python-format
msgid "_call_waiters: %s"
msgstr ""

#: heat/openstack/common/rpc/amqp.py:212
#, python-format
msgid ""
"Number of call waiters is greater than warning threshold: %d. There could"
" be a MulticallProxyWaiter leak."
msgstr ""

#: heat/openstack/common/rpc/amqp.py:290
#, python-format
msgid "unpacked context: %s"
msgstr ""

#: heat/openstack/common/rpc/amqp.py:342
#, python-format
msgid "UNIQUE_ID is %s."
msgstr ""

#: heat/openstack/common/rpc/amqp.py:435
#, python-format
msgid "received %s"
msgstr ""

#: heat/openstack/common/rpc/amqp.py:443
#, python-format
msgid "no method for message: %s"
msgstr ""

#: heat/openstack/common/rpc/amqp.py:444
#, python-format
msgid "No method for message: %s"
msgstr ""

#: heat/openstack/common/rpc/amqp.py:472
#: heat/openstack/common/rpc/impl_zmq.py:280
#, python-format
msgid "Expected exception during message handling (%s)"
msgstr ""

#: heat/openstack/common/rpc/amqp.py:480
#: heat/openstack/common/rpc/impl_zmq.py:286
msgid "Exception during message handling"
msgstr ""

#: heat/openstack/common/rpc/amqp.py:554
#, python-format
msgid "Making synchronous call on %s ..."
msgstr ""

#: heat/openstack/common/rpc/amqp.py:557
#, python-format
msgid "MSG_ID is %s"
msgstr ""

#: heat/openstack/common/rpc/amqp.py:583
#, python-format
msgid "Making asynchronous cast on %s..."
msgstr ""

#: heat/openstack/common/rpc/amqp.py:592
msgid "Making asynchronous fanout cast..."
msgstr ""

#: heat/openstack/common/rpc/amqp.py:620
#, python-format
msgid "Sending %(event_type)s on %(topic)s"
msgstr ""

#: heat/openstack/common/rpc/common.py:76
msgid "An unknown RPC related exception occurred."
msgstr ""

#: heat/openstack/common/rpc/common.py:106
#, python-format
msgid ""
"Remote error: %(exc_type)s %(value)s\n"
"%(traceback)s."
msgstr ""

#: heat/openstack/common/rpc/common.py:123
#, python-format
msgid ""
"Timeout while waiting on RPC response - topic: \"%(topic)s\", RPC method:"
" \"%(method)s\" info: \"%(info)s\""
msgstr ""

#: heat/openstack/common/rpc/common.py:140
#: heat/openstack/common/rpc/common.py:141
#: heat/openstack/common/rpc/common.py:142
msgid "<unknown>"
msgstr ""

#: heat/openstack/common/rpc/common.py:146
#, python-format
msgid "Found duplicate message(%(msg_id)s). Skipping it."
msgstr ""

#: heat/openstack/common/rpc/common.py:150
msgid "Invalid reuse of an RPC connection."
msgstr ""

#: heat/openstack/common/rpc/common.py:154
#, python-format
msgid "Specified RPC version, %(version)s, not supported by this endpoint."
msgstr ""

#: heat/openstack/common/rpc/common.py:159
#, python-format
msgid ""
"Specified RPC envelope version, %(version)s, not supported by this "
"endpoint."
msgstr ""

#: heat/openstack/common/rpc/common.py:164
#, python-format
msgid "Specified RPC version cap, %(version_cap)s, is too low"
msgstr ""

#: heat/openstack/common/rpc/common.py:288
#, python-format
msgid "Returning exception %s to caller"
msgstr ""

#: heat/openstack/common/rpc/impl_kombu.py:156
msgid "Failed to process message ... skipping it."
msgstr ""

#: heat/openstack/common/rpc/impl_kombu.py:160
msgid "Failed to process message ... will requeue."
msgstr ""

#: heat/openstack/common/rpc/impl_kombu.py:495
#, python-format
msgid "Reconnecting to AMQP server on %(hostname)s:%(port)d"
msgstr ""

#: heat/openstack/common/rpc/impl_kombu.py:517
#, python-format
msgid "Connected to AMQP server on %(hostname)s:%(port)d"
msgstr ""

#: heat/openstack/common/rpc/impl_kombu.py:554
#, python-format
msgid ""
"Unable to connect to AMQP server on %(hostname)s:%(port)d after "
"%(max_retries)d tries: %(err_str)s"
msgstr ""

#: heat/openstack/common/rpc/impl_kombu.py:568
#, python-format
msgid ""
"AMQP server on %(hostname)s:%(port)d is unreachable: %(err_str)s. Trying "
"again in %(sleep_time)d seconds."
msgstr ""

#: heat/openstack/common/rpc/impl_kombu.py:622
#: heat/openstack/common/rpc/impl_qpid.py:573
#, python-format
msgid "Failed to declare consumer for topic '%(topic)s': %(err_str)s"
msgstr ""

#: heat/openstack/common/rpc/impl_kombu.py:640
#: heat/openstack/common/rpc/impl_qpid.py:588
#, python-format
msgid "Timed out waiting for RPC response: %s"
msgstr ""

#: heat/openstack/common/rpc/impl_kombu.py:644
#: heat/openstack/common/rpc/impl_qpid.py:592
#, python-format
msgid "Failed to consume message from queue: %s"
msgstr ""

#: heat/openstack/common/rpc/impl_kombu.py:683
#: heat/openstack/common/rpc/impl_qpid.py:627
#, python-format
msgid "Failed to publish message to topic '%(topic)s': %(err_str)s"
msgstr ""

#: heat/openstack/common/rpc/impl_qpid.py:87
#, python-format
msgid "Invalid value for qpid_topology_version: %d"
msgstr ""

#: heat/openstack/common/rpc/impl_qpid.py:191
msgid "Failed to process message... skipping it."
msgstr ""

#: heat/openstack/common/rpc/impl_qpid.py:515
#, python-format
msgid "Unable to connect to AMQP server: %(e)s. Sleeping %(delay)s seconds"
msgstr ""

#: heat/openstack/common/rpc/impl_qpid.py:521
#, python-format
msgid "Connected to AMQP server on %s"
msgstr ""

#: heat/openstack/common/rpc/impl_qpid.py:534
msgid "Re-established AMQP queues"
msgstr ""

#: heat/openstack/common/rpc/impl_qpid.py:600
msgid "Error processing message.  Skipping it."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:96
msgid "JSON serialization failed."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:101
#, python-format
msgid "Deserializing: %s"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:136
#, python-format
msgid "Connecting to %(addr)s with %(type)s"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:137
#, python-format
msgid "-> Subscribed to %(subscribe)s"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:138
#, python-format
msgid "-> bind: %(bind)s"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:146
msgid "Could not open socket."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:158
#, python-format
msgid "Subscribing to %s"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:195
msgid "ZeroMQ socket could not be closed."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:200
msgid "You cannot recv on this socket."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:205
msgid "You cannot send on this socket."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:267
#, python-format
msgid "Running func with context: %s"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:305
msgid "Sending reply"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:339
msgid "RPC message did not include method."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:371
msgid "Registering reactor"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:383
msgid "In reactor registered"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:388
msgid "Consuming socket"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:438
#, python-format
msgid "Creating proxy for topic: %s"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:444
msgid "Topic contained dangerous characters."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:476
msgid "Topic socket file creation failed."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:482
#, python-format
msgid "Local per-topic backlog buffer full for topic %(topic)s. Dropping message."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:498
#, python-format
msgid "Required IPC directory does not exist at %s"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:507
#, python-format
msgid "Permission denied to IPC directory at %s"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:510
msgid "Could not create ZeroMQ receiver daemon. Socket may already be in use."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:544
#, python-format
msgid "CONSUMER RECEIVED DATA: %s"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:563
msgid "ZMQ Envelope version unsupported or unknown."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:591
msgid "Skipping topic registration. Already registered."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:598
#, python-format
msgid "Consumer is a zmq.%s"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:650
msgid "Creating payload"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:663
msgid "Creating queue socket for reply waiter"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:676
msgid "Sending cast"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:679
msgid "Cast sent; Waiting reply"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:682
#, python-format
msgid "Received message: %s"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:683
msgid "Unpacking response"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:692
msgid "Unsupported or unknown ZMQ envelope returned."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:699
msgid "RPC Message Invalid."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:722
#, python-format
msgid "%(msg)s"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:725
#, python-format
msgid "Sending message(s) to: %s"
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:729
msgid "No matchmaker results. Not casting."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:732
msgid "No match from matchmaker."
msgstr ""

#: heat/openstack/common/rpc/impl_zmq.py:814
#, python-format
msgid "rpc_zmq_matchmaker = %(orig)s is deprecated; use %(new)s instead"
msgstr ""

#: heat/openstack/common/rpc/matchmaker.py:45
msgid "Match not found by MatchMaker."
msgstr ""

#: heat/openstack/common/rpc/matchmaker.py:79
msgid "Matchmaker does not implement registration or heartbeat."
msgstr ""

#: heat/openstack/common/rpc/matchmaker.py:215
#, python-format
msgid "Matchmaker unregistered: %(key)s, %(host)s"
msgstr ""

#: heat/openstack/common/rpc/matchmaker.py:227
msgid "Register before starting heartbeat."
msgstr ""

#: heat/openstack/common/rpc/matchmaker_ring.py:75
#: heat/openstack/common/rpc/matchmaker_ring.py:93
#, python-format
msgid "No key defining hosts for topic '%s', see ringfile"
msgstr ""

#: heat/openstack/common/rpc/service.py:47
#, python-format
msgid "Creating Consumer connection for Service %s"
msgstr ""

#: heat/tests/generic_resource.py:33
#, python-format
msgid "Creating generic resource (Type \"%s\")"
msgstr ""

#: heat/tests/generic_resource.py:37
#, python-format
msgid "Updating generic resource (Type \"%s\")"
msgstr ""

#: heat/tests/generic_resource.py:41
#, python-format
msgid "Deleting generic resource (Type \"%s\")"
msgstr ""

#: heat/tests/generic_resource.py:48
#, python-format
msgid "Suspending generic resource (Type \"%s\")"
msgstr ""

#: heat/tests/generic_resource.py:52
#, python-format
msgid "Resuming generic resource (Type \"%s\")"
msgstr ""

#: heat/tests/generic_resource.py:70
#, python-format
msgid "Signaled resource (Type \"%(type)s\") %(details)s"
msgstr ""

#: heat/tests/test_exception.py:24
#, python-format
msgid "Testing message %(text)s"
msgstr ""

#~ msgid "%s not in valid format"
#~ msgstr ""

#~ msgid "Uncaught exception"
#~ msgstr ""

#~ msgid "Number of days to preserve."
#~ msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "The ID of the snapshot to create a volume from"
#~ msgstr ""

#~ msgid "ID of network to create a port on"
#~ msgstr ""

#~ msgid "ID of an existing port to associate with this server"
#~ msgstr ""

#~ msgid "Optional server name"
#~ msgstr ""

#~ msgid "The ID or name of the image to boot with"
#~ msgstr ""

#~ msgid "Block device mappings for this server"
#~ msgstr ""

#~ msgid "The ID or name of the flavor to boot onto"
#~ msgstr ""

#~ msgid "Name of keypair to inject into the server"
#~ msgstr ""

#~ msgid "Name of the administrative user to use  on the server"
#~ msgstr ""

#~ msgid "Name of the availability zone for server placement"
#~ msgstr ""

#~ msgid "List of security group names"
#~ msgstr ""

#~ msgid "Arbitrary key-value pairs specified by the client to help boot a server"
#~ msgstr ""

#~ msgid "User data script to be executed by cloud-init"
#~ msgstr ""

#~ msgid "A UUID for the set of servers being requested"
#~ msgstr ""

#~ msgid "value for config drive either boolean, or volume-id"
#~ msgstr ""

#~ msgid "Control how the disk is partitioned when the server is created"
#~ msgstr ""

#~ msgid "A dict of all server details as returned by the API"
#~ msgstr ""

#~ msgid "A dict of all network addresses as returned by the API"
#~ msgstr ""

#~ msgid "AWS compatible instance name"
#~ msgstr ""

#~ msgid "The manually assigned alternative public IPv4 address of the server"
#~ msgstr ""

#~ msgid "The manually assigned alternative public IPv6 address of the server"
#~ msgstr ""

#~ msgid "Operator used to compare specified statistic with threshold"
#~ msgstr ""

#~ msgid "Number of periods to evaluate over"
#~ msgstr ""

#~ msgid "Meter name watched by the alarm"
#~ msgstr ""

#~ msgid "Period (seconds) to evaluate over"
#~ msgstr ""

#~ msgid "Meter statistic to evaluate"
#~ msgstr ""

#~ msgid "Threshold to evaluate against"
#~ msgstr ""

#~ msgid "A list of URLs (webhooks) to invoke when state transitions to alarm"
#~ msgstr ""

#~ msgid "A list of URLs (webhooks) to invoke when state transitions to ok"
#~ msgstr ""

#~ msgid "Description for the alarm"
#~ msgstr ""

#~ msgid "True if alarm evaluation/actioning is enabled"
#~ msgstr ""

#~ msgid "Tenant owning the port"
#~ msgstr ""

#~ msgid "\"%s\" is not specified in parent resource"
#~ msgstr ""

#~ msgid "The list of tags to associate with the volume  (ignored)."
#~ msgstr ""

#~ msgid "Multiple images were found with name (%(image_name)s)."
#~ msgstr ""

#~ msgid "HOT Syntax"
#~ msgstr ""

#~ msgid "YAML Syntax"
#~ msgstr ""

#~ msgid "JSON Syntax"
#~ msgstr ""

#~ msgid "Not implemented."
#~ msgstr ""

#~ msgid "Can be updated without replacement."
#~ msgstr ""

#~ msgid "Updates cause replacement."
#~ msgstr ""

#~ msgid "Required property."
#~ msgstr ""

#~ msgid "Optional property, defaults to \"%s\"."
#~ msgstr ""

#~ msgid "Optional property."
#~ msgstr ""

#~ msgid "Map properties:"
#~ msgstr ""

#~ msgid "List contents:"
#~ msgstr ""

#~ msgid "Properties"
#~ msgstr ""

#~ msgid "Attributes"
#~ msgstr ""

#~ msgid "component %s is not defined."
#~ msgstr ""

#~ msgid "component %s depends on itself."
#~ msgstr ""

#~ msgid "duplicated %(dep)s in %(name)s depends on."
#~ msgstr ""

#~ msgid "List of security group names."
#~ msgstr ""

#~ msgid "Unknown accept header: %s...returning version choices."
#~ msgstr ""

#~ msgid "%(schema)s supplied for %(type)s %(data)s"
#~ msgstr ""

#~ msgid "Disposing SQLAlchemy engine %s"
#~ msgstr ""

#~ msgid "python-migrate is not installed. Exiting."
#~ msgstr ""

#~ msgid "Value must be valid JSON"
#~ msgstr ""

#~ msgid "ID of network to create a port on."
#~ msgstr ""

#~ msgid "The device where the volume is exposed on the instance."
#~ msgstr ""

#~ msgid "The location where the volume is exposed on the instance."
#~ msgstr ""

#~ msgid "Fixed ip addresses."
#~ msgstr ""

#~ msgid "Mac address of the port."
#~ msgstr ""

#~ msgid "Additional mac/ip address pairs allowed to pass through a port"
#~ msgstr ""

#~ msgid "There was an error configuring the client."
#~ msgstr ""

#~ msgid "Response from Keystone does not contain a Heat endpoint."
#~ msgstr ""

#~ msgid "Got mysql server has gone away: %s"
#~ msgstr ""

#~ msgid "SwiftContainer create container %(container)s with headers %(headers)s"
#~ msgstr ""

